{"version":3,"sources":["Login.js","Mealboard.js","App.js","reportWebVitals.js","index.js"],"names":["clientId","process","Login","useState","username","setusername","useremail","setuseremail","userimage","setuserimage","showloginButton","setShowloginButton","showlogoutButton","setShowlogoutButton","className","src","buttonText","onSuccess","res","console","log","profileObj","name","email","imageUrl","onFailure","cookiePolicy","isSignedIn","onLogoutSuccess","alert","clear","Mealboard","App","exact","activeClassName","to","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAGMA,EAAWC,2EA0DFC,MAxDf,WAEI,MAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,qBAAlC,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAkCJ,qBAAlC,mBAAOK,EAAP,KAAkBC,EAAlB,KAEA,EAA8CN,oBAAS,GAAvD,mBAAOO,EAAP,KAAwBC,EAAxB,KACA,EAAgDR,oBAAS,GAAzD,mBAAOS,EAAP,KAAyBC,EAAzB,KAqBA,OACI,gCACI,sBAAKC,UAAU,YAAf,UACI,qBAAKC,IAAKP,IACV,4BAAIJ,IACJ,4BAAIE,OAENI,EACE,cAAC,cAAD,CACIV,SAAUA,EACVgB,WAAW,UACXC,UA/BO,SAACC,GACpBC,QAAQC,IAAI,iBAAkBF,EAAIG,YAClCV,GAAmB,GACnBE,GAAoB,GACpBR,EAAYa,EAAIG,WAAWC,MAC3Bf,EAAaW,EAAIG,WAAWE,OAC5Bd,EAAaS,EAAIG,WAAWG,WA0BhBC,UAvBO,SAACP,GACpBC,QAAQC,IAAI,gBAAiBF,IAuBjBQ,aAAc,qBACdC,YAAY,IACX,KAEPf,EACE,cAAC,eAAD,CACIZ,SAAUA,EACVgB,WAAW,WACXY,gBA5BS,WACrBC,MAAM,yCACNV,QAAQW,QACRnB,GAAmB,GACnBE,GAAoB,MA0BM,SC1CnBkB,MAXf,WAEE,OACI,qBAAKjB,UAAU,YAAf,SACE,0D,eCoBOkB,MApBf,WAEE,OACE,eAAC,IAAD,WACA,cAAC,EAAD,IACA,sBAAKlB,UAAU,MAAf,UACE,sDAEA,cAAC,IAAD,CAASmB,OAAK,EAACC,gBAAgB,SAASC,GAAG,aAA3C,uBAEA,uBAEA,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAM,aAAaC,UAAWN,aCR9BO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.687c3582.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\n\nconst clientId = process.env.REACT_APP_clientId;\n\nfunction Login() {\n\n    const [username, setusername] = useState();\n    const [useremail, setuseremail] = useState();\n    const [userimage, setuserimage] = useState();\n\n    const [showloginButton, setShowloginButton] = useState(true);\n    const [showlogoutButton, setShowlogoutButton] = useState(false);\n    const onLoginSuccess = (res) => {\n        console.log('Login Success:', res.profileObj);\n        setShowloginButton(false);\n        setShowlogoutButton(true);\n        setusername(res.profileObj.name);\n        setuseremail(res.profileObj.email);\n        setuserimage(res.profileObj.imageUrl);\n    };\n\n    const onLoginFailure = (res) => {\n        console.log('Login Failed:', res);\n    };\n\n    const onSignoutSuccess = () => {\n        alert(\"You have been logged out successfully\");\n        console.clear();\n        setShowloginButton(true);\n        setShowlogoutButton(false);\n    };\n\n    return (\n        <div>\n            <div className=\"User Info\">\n                <img src={userimage} />\n                <p>{username}</p>\n                <p>{useremail}</p>\n            </div>\n            { showloginButton ?\n                <GoogleLogin\n                    clientId={clientId}\n                    buttonText=\"Sign In\"\n                    onSuccess={onLoginSuccess}\n                    onFailure={onLoginFailure}\n                    cookiePolicy={'single_host_origin'}\n                    isSignedIn={true}\n                /> : null}\n\n            { showlogoutButton ?\n                <GoogleLogout\n                    clientId={clientId}\n                    buttonText=\"Sign Out\"\n                    onLogoutSuccess={onSignoutSuccess}\n                >\n                </GoogleLogout> : null\n            }\n        </div>\n    );\n}\nexport default Login;","import React from 'react';\n\n\nfunction Mealboard() {\n  \n  return (\n      <div className=\"Mealboard\">\n        <h1>This is my Mealboard!</h1>\n\n        \n      </div>\n  );\n}\n\nexport default Mealboard;","import React from 'react';\nimport Login from './Login';\nimport Mealboard from './Mealboard';\nimport { BrowserRouter as Router, Route, Link, NavLink, Switch } from 'react-router-dom';\n\n\n\nfunction App() {\n  \n  return (\n    <Router>\n    <Login />\n    <div className=\"App\">\n      <h2>Plan your Mealboard!</h2>\n\n      <NavLink exact activeClassName=\"Active\" to=\"/mealboard\">Mealboard</NavLink>\n\n      <hr />\n\n      <Switch>\n        <Route path =\"/mealboard\" component={Mealboard} />\n      </Switch>\n    </div>\n  </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}