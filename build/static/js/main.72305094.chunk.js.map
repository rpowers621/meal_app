{"version":3,"sources":["Login.js","Mealboard.js","App.js","reportWebVitals.js","index.js"],"names":["clientId","process","Login","useState","username","setusername","useremail","setuseremail","userimage","setuserimage","showloginButton","setShowloginButton","showlogoutButton","setShowlogoutButton","className","src","buttonText","onSuccess","res","console","log","profileObj","name","email","imageUrl","onFailure","cookiePolicy","isSignedIn","onLogoutSuccess","alert","clear","itemsFromBackend","id","uuid","content","columnsFromBackend","items","Mealboard","columns","setColumns","style","display","justifyContent","height","onDragEnd","result","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","splice","index","removed","column","copiedItems","Object","entries","map","columnId","flexDirection","alignItems","margin","provided","snapshot","droppableProps","ref","innerRef","background","isDraggingOver","padding","width","minHeight","item","draggableId","draggableProps","dragHandleProps","userSelect","backgroundColor","isDragging","color","placeholder","App","exact","activeClassName","to","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72305094.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\n\nconst clientId = process.env.REACT_APP_clientId;\n\nfunction Login() {\n\n    const [username, setusername] = useState();\n    const [useremail, setuseremail] = useState();\n    const [userimage, setuserimage] = useState();\n\n    const [showloginButton, setShowloginButton] = useState(true);\n    const [showlogoutButton, setShowlogoutButton] = useState(false);\n    const onLoginSuccess = (res) => {\n        console.log('Login Success:', res.profileObj);\n        setShowloginButton(false);\n        setShowlogoutButton(true);\n        setusername(res.profileObj.name);\n        setuseremail(res.profileObj.email);\n        setuserimage(res.profileObj.imageUrl);\n    };\n\n    const onLoginFailure = (res) => {\n        console.log('Login Failed:', res);\n    };\n\n    const onSignoutSuccess = () => {\n        alert(\"You have been logged out successfully\");\n        console.clear();\n        setShowloginButton(true);\n        setShowlogoutButton(false);\n    };\n\n    return (\n        <div>\n            <div className=\"User Info\">\n                <img src={userimage} />\n                <p>{username}</p>\n                <p>{useremail}</p>\n            </div>\n            { showloginButton ?\n                <GoogleLogin\n                    clientId={clientId}\n                    buttonText=\"Sign In\"\n                    onSuccess={onLoginSuccess}\n                    onFailure={onLoginFailure}\n                    cookiePolicy={'single_host_origin'}\n                    isSignedIn={true}\n                /> : null}\n\n            { showlogoutButton ?\n                <GoogleLogout\n                    clientId={clientId}\n                    buttonText=\"Sign Out\"\n                    onLogoutSuccess={onSignoutSuccess}\n                >\n                </GoogleLogout> : null\n            }\n        </div>\n    );\n}\nexport default Login;","import React, { useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { v4 as uuid } from 'uuid';\n\nconst itemsFromBackend = [\n  { id: uuid(), content: \"First meal\" },\n  { id: uuid(), content: \"Second meal\" },\n  { id: uuid(), content: \"Third meal\" },\n  { id: uuid(), content: \"Fourth meal\" },\n  { id: uuid(), content: \"Fifth meal\" }\n];\n\nconst columnsFromBackend = {\n  [uuid()]: {\n    name: \"Suggested\",\n    items: itemsFromBackend\n  },\n  [uuid()]: {\n    name: \"Monday\",\n    items: []\n  },\n  [uuid()]: {\n    name: \"Tuesday\",\n    items: []\n  },\n  [uuid()]: {\n    name: \"Wednesday\",\n    items: []\n  },\n  [uuid()]: {\n    name: \"Thursday\",\n    items: []\n  },\n  [uuid()]: {\n    name: \"Friday\",\n    items: []\n  },\n  [uuid()]: {\n    name: \"Saturday\",\n    items: []\n  },\n  [uuid()]: {\n    name: \"Sunday\",\n    items: []\n  }\n};\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const { source, destination } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: {\n        ...destColumn,\n        items: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...column,\n        items: copiedItems\n      }\n    });\n  }\n};\n\nfunction Mealboard() {\n  const [columns, setColumns] = useState(columnsFromBackend);\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\", height: \"100%\" }}>\n      <DragDropContext\n        onDragEnd={result => onDragEnd(result, columns, setColumns)}\n      >\n        {Object.entries(columns).map(([columnId, column], index) => {\n          return (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\"\n              }}\n              key={columnId}\n            >\n              <h2>{column.name}</h2>\n              <div style={{ margin: 0 }}>\n                <Droppable droppableId={columnId} key={columnId}>\n                  {(provided, snapshot) => {\n                    return (\n                      <div\n                        {...provided.droppableProps}\n                        ref={provided.innerRef}\n                        style={{\n                          background: snapshot.isDraggingOver\n                            ? \"lightblue\"\n                            : \"lightgrey\",\n                          padding: 0,\n                          width: 150,\n                          minHeight: 500\n                        }}\n                      >\n                        {column.items.map((item, index) => {\n                          return (\n                            <Draggable\n                              key={item.id}\n                              draggableId={item.id}\n                              index={index}\n                            >\n                              {(provided, snapshot) => {\n                                return (\n                                  <div\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    style={{\n                                      userSelect: \"none\",\n                                      padding: 16,\n                                      margin: \"0 0 8px 0\",\n                                      minHeight: \"50px\",\n                                      backgroundColor: snapshot.isDragging\n                                        ? \"#263B4A\"\n                                        : \"#456C86\",\n                                      color: \"white\",\n                                      ...provided.draggableProps.style\n                                    }}\n                                  >\n                                    {item.content}\n                                  </div>\n                                );\n                              }}\n                            </Draggable>\n                          );\n                        })}\n                        {provided.placeholder}\n                      </div>\n                    );\n                  }}\n                </Droppable>\n              </div>\n            </div>\n          );\n        })}\n      </DragDropContext>\n    </div>\n  );\n}\n\nexport default Mealboard;\n\n","import React from 'react';\nimport Login from './Login';\nimport Mealboard from './Mealboard';\nimport { BrowserRouter as Router, Route, Link, NavLink, Switch } from 'react-router-dom';\n\n\n\nfunction App() {\n  \n  return (\n    <Router>\n    <Login />\n    <div className=\"App\">\n      <h2>Plan your Mealboard!</h2>\n\n      <NavLink exact activeClassName=\"Active\" to=\"/mealboard\">Mealboard</NavLink>\n\n      <hr />\n\n      <Switch>\n        <Route path =\"/mealboard\" component={Mealboard} />\n      </Switch>\n    </div>\n  </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}