[{"/home/rpowers8/project_2/src/index.js":"1","/home/rpowers8/project_2/src/App.js":"2","/home/rpowers8/project_2/src/Recipepage.js":"3","/home/rpowers8/project_2/src/Recipebox.js":"4","/home/rpowers8/project_2/src/Navbar.js":"5","/home/rpowers8/project_2/src/Login.js":"6","/home/rpowers8/project_2/src/UserProfile.js":"7"},{"size":222,"mtime":1637695292662,"results":"8","hashOfConfig":"9"},{"size":521,"mtime":1637698883396,"results":"10","hashOfConfig":"9"},{"size":2352,"mtime":1637695292662,"results":"11","hashOfConfig":"9"},{"size":20798,"mtime":1637707615974,"results":"12","hashOfConfig":"9"},{"size":641,"mtime":1637698784462,"results":"13","hashOfConfig":"9"},{"size":2376,"mtime":1637698630911,"results":"14","hashOfConfig":"9"},{"size":721,"mtime":1637675797708,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mmy93z",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rpowers8/project_2/src/index.js",[],"/home/rpowers8/project_2/src/App.js",["33"],"import React from 'react';\nimport Login from './Login';\nimport Navbar from './Navbar';\nimport Recipebox from \"./Recipebox\";\nimport Recipepage from \"./Recipepage\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n\n\nfunction App() {\n  \n  return (\n    <Router>\n    <Navbar />\n    <div className=\"App\">\n      <Switch>\n        <Route path =\"/Recipebox\"><Recipebox /></Route>\n        <Route path =\"/Recipepage\"><Recipepage /></Route>\n      </Switch>\n    </div>\n  </Router>\n  );\n}\n\nexport default App;","/home/rpowers8/project_2/src/Recipepage.js",["34","35","36"],"import './App.css'\nimport { React, useEffect, useState } from 'react'\nimport { useLocation } from 'react-router';\nimport {useHistory } from 'react-router-dom';\n\n\nfunction Recipepage() {\n\n    const placeholder = {\"step1\" : \"\"};\n\n    \n    const [title, setTitle]= useState('');\n    const [servingSize, setServingSize]= useState('');\n    const [readyMins, setReadyMins] =useState('');\n    const [recipeImg, setRecipeImg]= useState('');\n    const [sourceURL, setSoureURL] =useState('');\n    const [dishType, setDishType]= useState('');\n    const [ingredients, setIngredients] =useState('');\n    const [instruction, setInstruction]= useState(placeholder);\n\n\n\n    const location = useLocation();\n    useEffect(() => {\n        console.log(location.state.detail);\n        console.log(location.state.detail.recipe_title);\n        setTitle(location.state.detail.recipe_title);\n        setServingSize(location.state.detail.servings);\n        setReadyMins(location.state.detail.ready_in_mins);\n        setRecipeImg(location.state.detail.recipe_img);\n        setSoureURL(location.state.detail.source_url);\n        setDishType(location.state.detail.dish_type);\n        setIngredients(location.state.detail.ingredients);\n        setInstruction(location.state.detail.instruction);\n    }, [location]);\n\n\n    const history = useHistory();\n    function route(){\n        let path = '/Recipebox';\n        history.push(\n           { pathname: path,\n             state: {detail: location.state.detail}\n         });\n \n     }\n  \n\n    return (\n        <div>\n            <button onClick={route}> Back </button> \n\n            <div className=\"row\" style={{backgroundImage: \"url(\" + {recipeImg} + \")\",backgroundPosition: 'center',backgroundSize: 'cover',\n                backgroundRepeat: 'no-repeat'}}>\n                <div className=\"col\" id=\"left-side\">\n                    <h1>{title}</h1>\n\n                    <h4> Serving Size: {servingSize}</h4>\n\n                    <h4> Ready in: {readyMins} minutes</h4>\n\n                \n                 \n                    \n                    <a href={sourceURL} style={{color : 'black'}}> Link to Recipe's Original Website </a>\n                  \n\n                </div>\n\n            </div>\n           \n          \n            <footer>\n                <p></p>\n            </footer>\n        </div >\n    );\n\n}\nexport default Recipepage;","/home/rpowers8/project_2/src/Recipebox.js",["37","38","39"],"/home/rpowers8/project_2/src/Navbar.js",[],"/home/rpowers8/project_2/src/Login.js",["40"],"import React, { useState } from 'react';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport UserProfile from './UserProfile';\nconst clientId = process.env.REACT_APP_CLIENTID;\n\nfunction Login() {\n   \n\n    const [username, setusername] = useState(\"\");\n    const [useremail, setuseremail] = useState(\"\");\n    const [userimage, setuserimage] = useState(\"\");\n\n    const [showloginButton, setShowloginButton] = useState(true);\n    const [showlogoutButton, setShowlogoutButton] = useState(false);\n    const onLoginSuccess = (res) => {\n        console.log('Login Success:', res.profileObj);\n        setShowloginButton(false);\n        setShowlogoutButton(true);\n        setusername(res.profileObj.name);\n        setuseremail(res.profileObj.email);\n        setuserimage(res.profileObj.imageUrl);\n        UserProfile.setEmail(res.profileObj.email);\n        UserProfile.setName(res.profileObj.name);\n        fetchEmail(res.profileObj.email);\n        \n    };\n\n    const onLoginFailure = (res) => {\n        console.log('Login Failed:', res);\n    };\n\n    const onSignoutSuccess = () => {\n        alert(\"You have been logged out successfully\");\n        console.clear();\n        setShowloginButton(true);\n        setShowlogoutButton(false);\n    };\n\n    function fetchEmail(email){\n\n        fetch(\"/\", {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify( {'email': email}),\n          });\n   \n    }\n\n    return (\n        <div>\n            <div className=\"user-info\">\n                <img src={userimage} atl=\"\"/>\n                <p>{username}</p>\n                <p>{useremail}</p>\n            </div>\n            { showloginButton ?\n                <GoogleLogin\n                    clientId={clientId}\n                    buttonText=\"Sign In\"\n                    onSuccess={onLoginSuccess}\n                    onFailure={onLoginFailure}\n                    cookiePolicy={'single_host_origin'}\n                    isSignedIn={true}\n                /> : null}\n\n            { showlogoutButton ?\n                <GoogleLogout\n                    clientId={clientId}\n                    buttonText=\"Sign Out\"\n                    onLogoutSuccess={onSignoutSuccess}\n                >\n                </GoogleLogout> : null\n            }\n        </div>\n    );\n}\nexport default Login;\n","/home/rpowers8/project_2/src/UserProfile.js",[],{"ruleId":"41","severity":1,"message":"42","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":13},{"ruleId":"41","severity":1,"message":"45","line":17,"column":12,"nodeType":"43","messageId":"44","endLine":17,"endColumn":20},{"ruleId":"41","severity":1,"message":"46","line":18,"column":12,"nodeType":"43","messageId":"44","endLine":18,"endColumn":23},{"ruleId":"41","severity":1,"message":"47","line":19,"column":12,"nodeType":"43","messageId":"44","endLine":19,"endColumn":23},{"ruleId":"41","severity":1,"message":"48","line":34,"column":21,"nodeType":"43","messageId":"44","endLine":34,"endColumn":25},{"ruleId":"41","severity":1,"message":"49","line":35,"column":21,"nodeType":"43","messageId":"44","endLine":35,"endColumn":25},{"ruleId":"41","severity":1,"message":"50","line":36,"column":22,"nodeType":"43","messageId":"44","endLine":36,"endColumn":27},{"ruleId":"51","severity":1,"message":"52","line":54,"column":17,"nodeType":"53","endLine":54,"endColumn":46},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'dishType' is assigned a value but never used.","'ingredients' is assigned a value but never used.","'instruction' is assigned a value but never used.","'setC' is assigned a value but never used.","'setD' is assigned a value but never used.","'setCU' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]