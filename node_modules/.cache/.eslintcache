[{"/home/Jilal99/meal_app/src/index.js":"1","/home/Jilal99/meal_app/src/App.js":"2","/home/Jilal99/meal_app/src/Navbar.js":"3","/home/Jilal99/meal_app/src/About.js":"4","/home/Jilal99/meal_app/src/Contact.js":"5","/home/Jilal99/meal_app/src/Login.js":"6","/home/Jilal99/meal_app/src/Recipepage.js":"7","/home/Jilal99/meal_app/src/Recipebox.js":"8","/home/Jilal99/meal_app/src/UserProfile.js":"9","/home/Jilal99/meal_app/src/Nutritionbreakdown.js":"10","/home/Jilal99/meal_app/src/Home.js":"11"},{"size":223,"mtime":1638335699670,"results":"12","hashOfConfig":"13"},{"size":808,"mtime":1638370094243,"results":"14","hashOfConfig":"13"},{"size":902,"mtime":1638370087383,"results":"15","hashOfConfig":"13"},{"size":749,"mtime":1638335699670,"results":"16","hashOfConfig":"13"},{"size":1536,"mtime":1638335699670,"results":"17","hashOfConfig":"13"},{"size":2432,"mtime":1638369359516,"results":"18","hashOfConfig":"13"},{"size":4561,"mtime":1638335440223,"results":"19","hashOfConfig":"13"},{"size":20572,"mtime":1638335440223,"results":"20","hashOfConfig":"13"},{"size":721,"mtime":1638335440223,"results":"21","hashOfConfig":"13"},{"size":271,"mtime":1638331659605,"results":"22","hashOfConfig":"13"},{"size":963,"mtime":1638370373446,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1jck1p1",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/Jilal99/meal_app/src/index.js",[],["51","52"],"/home/Jilal99/meal_app/src/App.js",[],"/home/Jilal99/meal_app/src/Navbar.js",[],"/home/Jilal99/meal_app/src/About.js",[],"/home/Jilal99/meal_app/src/Contact.js",[],"/home/Jilal99/meal_app/src/Login.js",["53","54","55"],"import React, { useState } from \"react\";\nimport { GoogleLogin, GoogleLogout, useGoogleLogin } from \"react-google-login\";\nimport UserProfile from \"./UserProfile\";\nimport \"./Login.css\";\nconst clientId = process.env.REACT_APP_CLIENTID;\nconst redirectUri = process.env.REDIRECT_URI;\n// added redirect for google api\n\nfunction Login() {\n\n\n  const [username, setusername] = useState(\"\");\n  const [useremail, setuseremail] = useState(\"\");\n  const [userimage, setuserimage] = useState(\"\");\n\n  const [showloginButton, setShowloginButton] = useState(true);\n  const [showlogoutButton, setShowlogoutButton] = useState(false);\n  const onLoginSuccess = (res) => {\n    console.log(\"Login Success:\", res.profileObj);\n    setShowloginButton(false);\n    setShowlogoutButton(true);\n    setusername(res.profileObj.name);\n    setuseremail(res.profileObj.email);\n    setuserimage(res.profileObj.imageUrl);\n    UserProfile.setEmail(res.profileObj.email);\n    UserProfile.setName(res.profileObj.name);\n    fetchEmail(res.profileObj.email);\n  };\n\n  const onLoginFailure = (res) => {\n    console.log(\"Login Failed:\", res);\n  };\n\n  const onSignoutSuccess = () => {\n    alert(\"You have been logged out successfully\");\n    console.clear();\n    setShowloginButton(true);\n    setShowlogoutButton(false);\n  };\n\n  // useState for google api\n  const { signIn, loaded } = useGoogleLogin({\n    onSuccess: onLoginSuccess,\n    clientId: clientId,\n    onFailure: onLoginFailure,\n    redirectUri: redirectUri,\n  });\n\n  function fetchEmail(email) {\n    fetch(\"/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email: email }),\n    });\n  }\n\n  return (\n    <div>\n      <div className=\"user-info\">\n        <img src={userimage} atl=\"\" />\n        <p>{username}</p>\n        <p>{useremail}</p>\n      </div>\n      {showloginButton ? (\n        // <GoogleLogin\n        //   clientId={clientId}\n        //   buttonText=\"Sign In\"\n        //   onSuccess={onLoginSuccess}\n        //   onFailure={onLoginFailure}\n        //   cookiePolicy={\"single_host_origin\"}\n        //   isSignedIn={true}\n        // />\n        <button onClick={signIn}>Button</button>\n      ) : null}\n\n      {showlogoutButton ? (\n        <GoogleLogout\n          clientId={clientId}\n          buttonText=\"Sign Out\"\n          onLogoutSuccess={onSignoutSuccess}\n        ></GoogleLogout>\n      ) : null}\n    </div>\n  );\n}\nexport default Login;\n","/home/Jilal99/meal_app/src/Recipepage.js",["56","57","58","59","60"],"import './App.css'\nimport { React, useEffect, useState } from 'react'\nimport { useLocation } from 'react-router';\nimport {useHistory } from 'react-router-dom';\n\n\n\nfunction Recipepage() {\n\n\n    \n    const [title, setTitle]= useState('');\n    const [servingSize, setServingSize]= useState('');\n    const [readyMins, setReadyMins] =useState('');\n    const [recipeImg, setRecipeImg]= useState('');\n    const [sourceURL, setSoureURL] =useState('');\n    const [dishType, setDishType]= useState('');\n    const [ingredients, setIngredients] =useState([]);\n    const [ingred_imgs, setIngredImg] = useState([]);\n    const [instruction, setInstruction]= useState([]);\n\n    const [day, setDay] = useState('');\n    const [id, setId] =useState(\"\");\n    const [update, setUpdate] = useState({});\n    const [titles, setTitles] = useState({});\n\n    const [message, setMessage] = useState(\"\");\n    \n\n\n\n    const location = useLocation();\n    useEffect(() => {\n        console.log(location.state.detail);\n        console.log(location.state.detail.recipe_title);\n        setTitle(location.state.detail.recipe_title);\n        setServingSize(location.state.detail.servings);\n        setReadyMins(location.state.detail.ready_in_mins);\n        setRecipeImg(location.state.detail.recipe_img);\n        setSoureURL(location.state.detail.source_url);\n        setDishType(location.state.detail.dish_type);\n        setIngredients(location.state.detail.ingredients);\n        setIngredImg(location.state.detail.ingred_imgs);\n        setInstruction(location.state.detail.instructions);\n        setId(location.state.detail.id)\n    }, [location]);\n\n\n    const history = useHistory();\n    function route(){\n        let path = '/Recipebox';\n        history.push(\n           { pathname: path,\n             state: {detail: location.state.detail}\n         });\n \n     }\n\n\n    function addToDB() {\n        update[id]= day;\n        setUpdate(update);\n    \n        fetch(\"/update\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ \"update\": update, \"title\" : title }),\n        }).then((response) => response.json()).then((data) => {\n            console.log(data);\n            setMessage(\"Recipe Added!\");\n          \n    });\n}\n\n\nconst ingredsList = [];\nfor(const [index,value]of ingredients.entries()){\n    ingredsList.push(<li key={index}>{value}</li>)\n}\n\n    return (\n        <div>\n            <button onClick={route}> Back To Mealboard</button> \n\n            <div className=\"row\">\n            \n                <div className=\"col\" id=\"left-side\">\n                    <h1>{title}</h1>\n\n                    <h4> Serving Size: {servingSize}</h4>\n                        <img src={recipeImg} />\n           \n                    <h4> Ready in: {readyMins} minutes</h4>\n\n                \n                 \n                    \n                    <a href={sourceURL} style={{color : 'black'}}> Link to Recipe's Original Website </a>\n\n                    <div className=\"add-to-mb\">\n                            <select onChange={(e) => setDay(e.target.value)} >\n                                <option value='default'> Pick Day </option>\n                                <option value=\"1\">Monday</option>\n                                <option value=\"2\">Tuesday</option>\n                                <option value=\"3\">Wednesday</option>\n                                <option value=\"4\">Thursday</option>\n                                <option value=\"5\">Friday</option>\n                                <option value=\"6\">Saturday</option>\n                                <option value=\"7\">Sunday</option>\n                            </select>\n                            <button onClick={addToDB}>Add recipe!</button>\n                            <p>{message}</p>\n                            \n                    </div>\n                \n                  \n\n                </div>\n\n            </div>\n            <h3> Ingredients </h3>\n                <br></br>\n                <br></br>\n            <div>\n               \n                <ul>{ingredsList}</ul>\n            </div>\n            <br></br>\n            <br></br>      \n            <div>\n                {instruction.map((value, index)=>(\n                    <div>\n                        <p> Step {index+1}: {value}</p>\n                        <br></br>  \n                    </div>\n                ))}\n            </div>\n          \n            <footer>\n              \n            </footer>\n        </div >\n    );\n\n}\nexport default Recipepage;","/home/Jilal99/meal_app/src/Recipebox.js",["61","62","63"],"import { React, useState, useEffect } from 'react'\nimport { useHistory, } from 'react-router-dom';\nimport './App.css'\nimport UserProfile from './UserProfile';\n\nfunction Recipebox() {\n\n    const [searchType, setSearchType] = useState('');\n    const [searchCriteria, setSearchCriteria] = useState('');\n    const [meals, setMeals] = useState([\"\"]);\n    const [meal_ids, setMeal_ids] = useState([\"\"]);\n    const [recipeData, setRecipeData] = useState(\"\");\n    const [day, setDay] = useState('');\n    const [mon, setMon] = useState(['']);\n    const [tues, setTues] = useState(['']);\n    const [wed, setWed] = useState(['']);\n    const [thur, setThur] = useState(['']);\n    const [fri, setFri] = useState(['']);\n    const [sat, setSat] = useState(['']);\n    const [sun, setSun] = useState(['']);\n  \n    const [monId, setMonId] = useState('');\n    const [tuesId, setTuesId] = useState('');\n    const [wedId, setWedId] = useState('');\n    const [thurId, setThurId] = useState('');\n    const [friId, setFriId] = useState('');\n    const [satId, setSatId] = useState('');\n    const [sunId, setSunId] = useState('');\n\n    const [update, setUpdate] = useState({});\n    const [titles, setTitles] = useState({});\n\n    const [iSelect, setI] = useState(false);\n    const [cSelect, setC] = useState(false);\n    const [dSelect, setD] = useState(false);\n    const [cuSelect, setCU] = useState(false);\n\n    const [active, setActive] = useState();\n\n    const [cal, setCal]= useState(\"\");\n    const [ingred, setIngred] = useState(\"\");\n\n    const [toDelete, setDelete] = useState('');\n\n    const[error, setError] = useState('');\n\n    \n\n    useEffect(() => {\n\n        fetch(\"/connectDB\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => response.json()).then((data) => {\n            console.log(data);\n            setMon(data.mon_name);\n            setMonId(data.mon_ids);\n            setTues(data.tues_name);\n            setTuesId(data.tues_ids);\n            setWed(data.wed_name);\n            setWedId(data.wed_ids);\n            setThur(data.thur_name);\n            setThurId(data.thur_ids);\n            setFri(data.fri_name);\n            setFriId(data.fri_ids);\n            setSat(data.sat_name);\n            setSatId(data.sat_ids);\n            setSun(data.sun_name);\n            setSunId(data.sun_ids);\n\n\n        });\n    }, [])\n\n    \n\n    function add(e) {\n        console.log(e);\n        if( e !== \"\"){\n            setSearchCriteria([e]);\n        }\n       \n        setI(false);\n        setC(false);\n        setD(false);\n        setCU(false);\n        setCal(\"\");\n        setIngred(\"\");\n        setError('');\n        setActive('');\n    }\n\n    function refresh() {\n        setSearchCriteria('');\n        setSearchType('');\n        setMeal_ids(['']);\n        setMeals(['']);\n            \n        setI(false);\n        setC(false);\n        setD(false);\n        setCU(false);\n        setError('');\n\n    }\n \n    function send() {\n\n        fetch(\"/getsuggestions\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ 'searchCritria': searchCriteria, \"searchType\": searchType }),\n        }).then((response) => response.json()).then((data) => {\n            console.log(data);\n            if(data.error){\n                console.log(\"error\");\n                setError(data.error);\n            }else{\n                setMeals([...meals,data.key]);\n                setMeal_ids([...meal_ids,data.value]);\n    \n                setI(false);\n                setC(false);\n                setD(false);\n                setCU(false);\n                setError('');\n                setActive('');\n            }\n        \n\n        });\n        return;\n\n    }\n\n    const history = useHistory();\n    function recipe_page(e) {\n        console.log(e);\n\n        fetch(\"/recipepage\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ \"id\": e }),\n        }).then((response) => response.json()).then((data) => {\n            console.log(data);\n            setRecipeData(data);\n        });\n\n    }\n\n    function route() {\n        \n        let path = '/Recipepage';\n\n        history.push(\n            {\n                pathname: path,\n                state: { detail: recipeData }\n            });\n\n    }\n\n    function addToBoard(e) {\n        console.log(e);\n        console.log(day);\n        setUpdate({});\n        update[meal_ids[e]]= day;\n    \n\n        setUpdate(update);\n        console.log(meal_ids[e]);\n        setTitles(meals[e]);\n        setError('');\n    }\n\n    function addToDB() {\n        console.log(update);\n        console.log(titles);\n\n        fetch(\"/update\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ \"update\": update, \"title\" : titles }),\n        }).then((response) => response.json()).then((data) => {\n            console.log(data);\n            setDay(\"\");\n            setUpdate({});\n            setTitles(\"\");\n            setMon(data.mon_name);\n            setMonId(data.mon_ids);\n            setTues(data.tues_name);\n            setTuesId(data.tues_ids);\n            setWed(data.wed_name);\n            setWedId(data.wed_ids);\n            setThur(data.thur_name);\n            setThurId(data.thur_ids);\n            setFri(data.fri_name);\n            setFriId(data.fri_ids);\n            setSat(data.sat_name);\n            setSatId(data.sat_ids);\n            setSun(data.sun_name);\n            setSunId(data.sun_ids);\n            setError('');\n            setActive('');\n            setMeal_ids(['']);\n            setMeals(['']);\n          \n        });\n    }\n\n    function resetMealboard(){\n        fetch(\"/reset\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }).then((response) => response.json()).then((data) => {\n            console.log(data);\n       \n            setMon(data.mon_name);\n            setMonId(data.mon_ids);\n            setTues(data.tues_name);\n            setTuesId(data.tues_ids);\n            setWed(data.wed_name);\n            setWedId(data.wed_ids);\n            setThur(data.thur_name);\n            setThurId(data.thur_ids);\n            setFri(data.fri_name);\n            setFriId(data.fri_ids);\n            setSat(data.sat_name);\n            setSatId(data.sat_ids);\n            setSun(data.sun_name);\n            setSunId(data.sun_ids);\n            setError('');\n\n            refresh();\n          \n           \n        });\n    }\n\n    function deleteMeal(){\n        fetch(\"/delete\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ \"delete\": toDelete}),\n        }).then((response) => response.json()).then((data) => {\n            console.log(data);\n       \n            setMon(data.mon_name);\n            setMonId(data.mon_ids);\n            setTues(data.tues_name);\n            setTuesId(data.tues_ids);\n            setWed(data.wed_name);\n            setWedId(data.wed_ids);\n            setThur(data.thur_name);\n            setThurId(data.thur_ids);\n            setFri(data.fri_name);\n            setFriId(data.fri_ids);\n            setSat(data.sat_name);\n            setSatId(data.sat_ids);\n            setSun(data.sun_name);\n            setSunId(data.sun_ids);\n          \n           \n        });\n    \n    }\n\n\n    var sug_box = []\n    for(var [index, value]of meals.entries()){\n        if(value){\n            sug_box.push( <div>\n                <button  style={active === index+\"b\" ? {backgroundColor: 'red' }: {}} className=\"recipe-button\" value={value} onClick={(e) => {recipe_page(meal_ids[index]); setActive(index+\"b\"); addToBoard(index)}}> {value}</button>\n                \n            </div>)\n        }else{\n            continue;\n        }\n    \n    }\n    const greeting = [];\n    if(UserProfile.getName()){\n        greeting.push( <h1> {UserProfile.getName()}&apos;s Mealboard</h1>)\n    }\n   \n\n\n\n    const mon_items = [];\n    for(const [index,value]of mon.entries()){\n        mon_items.push(<button className=\"sug-but\" style={active === index+\"m\" ? {backgroundColor: 'red' }: {}} value={monId[index]} onClick={(e)=> {recipe_page(e.target.value); setActive(index+\"m\"); setDelete(e.target.value);}}>{value}</button>)\n    }\n\n    const tues_items = [];\n    for(const [index,value]of tues.entries()){\n        tues_items.push(<button className=\"sug-but\" style={active === index+\"t\" ? {backgroundColor: 'red' }: {}} value={tuesId[index]} onClick={(e)=> {recipe_page(e.target.value); setActive(index+\"t\");setDelete(e.target.value);}}>{value}</button>)\n    }\n\n    const wed_items = [];\n    for(const [index,value]of wed.entries()){\n        wed_items.push(<button className=\"sug-but\" style={active === index+\"w\" ? {backgroundColor: 'red' }: {}} value={wedId[index]} onClick={(e)=> {recipe_page(e.target.value); setActive(index+\"w\");setDelete(e.target.value);}}>{value}</button>)\n    }\n\n    const thur_items = [];\n    for(const [index,value]of thur.entries()){\n        thur_items.push(<button  className=\"sug-but\"style={active === index+\"th\" ? {backgroundColor: 'red' }: {}} value={thurId[index]} onClick={(e)=> {recipe_page(e.target.value); setActive(index+\"th\");setDelete(e.target.value);}}>{value}</button>)\n    }\n\n    const fri_items = [];\n    for(const [index,value]of fri.entries()){\n        fri_items.push(<button className=\"sug-but\" style={active === index+\"f\" ? {backgroundColor: 'red' }: {}} value={friId[index]} onClick={(e)=> {recipe_page(e.target.value); setActive(index+\"f\");setDelete(e.target.value);}}>{value}</button>)\n    }\n\n    const sat_items = [];\n    for(const [index,value]of sat.entries()){\n        sat_items.push(<button  className=\"sug-but\" style={active === index+\"s\" ? {backgroundColor: 'red' }: {}} value={satId[index]} onClick={(e)=> {recipe_page(e.target.value); setActive(index+\"s\");setDelete(e.target.value);}}>{value}</button>)\n    }\n\n    const sun_items = [];\n    for(const [index,value]of sun.entries()){\n        sun_items.push(<button className=\"sug-but\" style={active === index+\"sn\" ? {backgroundColor: 'red' }: {}} value={sunId[index]} onClick={(e)=> {recipe_page(e.target.value); setActive(index+\"sn\");setDelete(e.target.value);}}>{value}</button>)\n    }\n    return (\n\n        <div className=\"box\">\n           {greeting}\n            <div className=\"row\">\n             \n                <div className=\"col\">\n                    <div className=\"recipe_search_box\">\n                        <h1>Search For Recipes</h1>\n\n                        <div className=\"by_ingreds\">\n                            <input onClick={() => {setSearchType('ingredients'); setI(true);}} checked={iSelect} type=\"checkbox\" name=\"ingreds\"\n                                value=\"Search by Ingredients\" />\n                            <label id=\"ingredients\" className=\"label-header\" htmlFor=\"ingreds\">Search by Ingredients</label>\n                            <br></br>\n                            <label htmlFor=\"\">Enter Ingredient</label>\n                            <input data-testid=\"Enter_Ingredient\" value={ingred} on onChangeCapture={(e) => {add(e.target.value); setIngred(e.target.value);}} id=\"ingreds\" type=\"text\" />\n                            <p> {error} </p>\n                            <button onClick={send}>Add Ingredients</button>\n\n\n                            <br />\n                        </div>\n\n\n                        <div className=\"by_diet\">\n                            <input onClick={() => {setSearchType('diet'); setD(true);}} checked={dSelect} type=\"checkbox\" name=\"diet\"\n                                value=\"Search by Diet\" />\n                            <label className=\"label-header\" htmlFor=\"diet\">Search by Diet</label>\n                            <br />\n                            <div className=\"drop-diet\">\n                                <select onChange={(e) => add(e.target.value)} id=\"diet\" name=\"\" placeholder=\" \">\n                                    <option value='default'> Pick Diet </option>\n                                    <option value=\"Gluten Free\">Gluten Free</option>\n                                    <option value=\"Ketogenic\">Ketogenic</option>\n                                    <option value=\"Vegetarian\">Vegetarian</option>\n                                    <option value=\"Lacto-Vegetarian\">Lacto-Vegetarian</option>\n                                    <option value=\"Ovo-Vegetarian\">Ovo-Vegetarian</option>\n                                    <option value=\"Vegan\">Vegan</option>\n                                    <option value=\"Pescetarian\">Pescetarian</option>\n                                    <option value=\"Paleo\">Paleo</option>\n                                    <option value=\"Primal\">Primal</option>\n                                    <option value=\"Low FODMAP\">Low FODMAP</option>\n                                    <option value=\"Whole30\">Whole30</option>\n                                </select>\n                            </div>\n                            <button onClick={send}>Add Diet</button>\n                        </div>\n\n                        <div className=\"by_cuisine\">\n                            <input onClick={() => {setSearchType('cuisine'); setCU(true);}} checked={cuSelect} type=\"checkbox\" name=\"cuisine\"\n                                value=\"Search by Cuisine\" />\n                            <label className=\"label-header\" htmlFor=\"cuisine\">Search by Cuisine</label>\n                            <br />\n                            <div className=\"drop-cuisine\">\n                                <select onChange={(e) => add(e.target.value)} id=\"cuisine\" name=\"\">\n                                    <option value='default'> Pick Cuisine </option>\n                                    <option value=\"African\">African</option>\n                                    <option value=\"American\">American</option>\n                                    <option value=\"British\">British</option>\n                                    <option value=\"Cajun\">Cajun</option>\n                                    <option value=\"Caribbean\">Caribbean</option>\n                                    <option value=\"Eastern European\">Eastern European</option>\n                                    <option value=\"European\">European</option>\n                                    <option value=\"French\">French</option>\n                                    <option value=\"German\">German</option>\n                                    <option value=\"Greek\">Greek</option>\n                                    <option value=\"Indian\">Indian</option>\n                                    <option value=\"Irish\">Irish</option>\n                                    <option value=\"Italian\">Italian</option>\n                                    <option value=\"Japanese\">Japanese</option>\n                                    <option value=\"Jewish\">Jewish</option>\n                                    <option value=\"Korean\">Korean</option>\n                                    <option value=\"Latin American\">Latin American</option>\n                                    <option value=\"Mediterranean\">Mediterranean</option>\n                                    <option value=\"Mexican\">Mexican</option>\n                                    <option value=\"Middle Eastern\">Middle Eastern</option>\n                                    <option value=\"Nordic\">Nordic</option>\n                                    <option value=\"Southern\">Southern</option>\n                                    <option value=\"Spanish\">Spanish</option>\n                                    <option value=\"Thai\">Thai</option>\n                                    <option value=\"Vietnamese\">Vietnamese</option>\n                                </select>\n                            </div>\n                            <button onClick={send}>Add Cuisine</button>\n\n                            <button onClick={refresh}> Clear Suggestions</button>\n\n                        </div>\n                    </div>\n                </div>\n                <div className='col'>\n                    <div className=\"suggestion-box\">\n                        <h3>Suggestion Box</h3>   \n                        <div className=\"add-to-mb\">\n                            <select onChange={(e) => setDay(e.target.value)} >\n                                <option value='default'> Pick Day </option>\n                                <option value=\"1\">Monday</option>\n                                <option value=\"2\">Tuesday</option>\n                                <option value=\"3\">Wednesday</option>\n                                <option value=\"4\">Thursday</option>\n                                <option value=\"5\">Friday</option>\n                                <option value=\"6\">Saturday</option>\n                                <option value=\"7\">Sunday</option>\n                            </select>\n                            \n                        </div>\n                        {sug_box}\n\n                       \n\n                        <button onClick={addToDB}>Add</button>\n\n                    </div>\n                </div>\n                <div className='col'>\n                    <div className=\"monday\">\n                        <h3>Monday</h3>\n                        <div className=\"row\">\n                            <div className=\"row-top\">\n                                {mon_items}\n                            </div>\n                        </div>\n               \n                    </div>\n                </div>\n                <div className='col'>\n                    <div className=\"tuesday\">\n                        <h3>Tuesday</h3>\n                        <div className=\"row\">\n                            <div className=\"row-top\">\n                            {tues_items}\n                            </div>\n                        </div>\n               \n                        \n                    </div>\n                </div>\n                <div className='col'>\n                    <div className=\"wednesday\">\n                        <h3>Wednesday</h3>\n                        <div className=\"row\">\n                            <div className=\"row-top\">\n                            {wed_items}\n                            </div>\n                        </div>\n                  \n                        \n                    </div>\n                </div>\n                <div className='col'>\n                    <div className=\"thursday\">\n                        <h3>Thursday</h3>\n                        <div className=\"row\">\n                            <div className=\"row-top\">\n                            {thur_items}\n                            </div>\n                        </div>\n                 \n                    \n                    </div>\n                </div>\n                <div className='col'>\n                    <div className=\"friday\">\n                        <h3>Friday</h3>\n                        <div className=\"row\">\n                            <div className=\"row-top\">\n                            {fri_items}\n                            </div>\n                        </div>\n                \n                        \n                    </div>\n                </div>\n                <div className='col'>\n                    <div className=\"saturday\">\n                        <h3>Saturday</h3>\n                        <div className=\"row\">\n                            <div className=\"row-top\">\n                            {sat_items}\n                            </div>\n                        </div>\n                     \n                    </div>\n                </div>\n                <div className='col'>\n                    <div className=\"sunday\">\n                        <h3>Sunday</h3>\n                        <div className=\"row\">\n                            <div className=\"row-top\">\n                            {sun_items}\n                            </div>\n                        </div>\n                     \n                    </div>\n                </div>\n            </div>\n            <br></br>\n            <div> \n                <button onClick={resetMealboard}>Reset Mealboard</button> \n                <button onClick={route}>Go to Recipe page!</button>\n                <button onClick={deleteMeal}> Delete Recipe</button>\n            </div>\n        </div>\n    );\n\n}\nexport default Recipebox;","/home/Jilal99/meal_app/src/UserProfile.js",[],"/home/Jilal99/meal_app/src/Nutritionbreakdown.js",[],["64","65"],"/home/Jilal99/meal_app/src/Home.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":21},{"ruleId":"70","severity":1,"message":"74","line":42,"column":19,"nodeType":"72","messageId":"73","endLine":42,"endColumn":25},{"ruleId":"75","severity":1,"message":"76","line":62,"column":9,"nodeType":"77","endLine":62,"endColumn":39},{"ruleId":"70","severity":1,"message":"78","line":17,"column":12,"nodeType":"72","messageId":"73","endLine":17,"endColumn":20},{"ruleId":"70","severity":1,"message":"79","line":19,"column":12,"nodeType":"72","messageId":"73","endLine":19,"endColumn":23},{"ruleId":"70","severity":1,"message":"80","line":25,"column":12,"nodeType":"72","messageId":"73","endLine":25,"endColumn":18},{"ruleId":"70","severity":1,"message":"81","line":25,"column":20,"nodeType":"72","messageId":"73","endLine":25,"endColumn":29},{"ruleId":"75","severity":1,"message":"76","line":93,"column":25,"nodeType":"77","endLine":93,"endColumn":48},{"ruleId":"70","severity":1,"message":"82","line":34,"column":12,"nodeType":"72","messageId":"73","endLine":34,"endColumn":19},{"ruleId":"70","severity":1,"message":"83","line":40,"column":12,"nodeType":"72","messageId":"73","endLine":40,"endColumn":15},{"ruleId":"84","severity":1,"message":"85","line":285,"column":136,"nodeType":"86","messageId":"87","endLine":285,"endColumn":214},{"ruleId":"66","replacedBy":"88"},{"ruleId":"68","replacedBy":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'GoogleLogin' is defined but never used.","Identifier","unusedVar","'loaded' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'dishType' is assigned a value but never used.","'ingred_imgs' is assigned a value but never used.","'titles' is assigned a value but never used.","'setTitles' is assigned a value but never used.","'cSelect' is assigned a value but never used.","'cal' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'index', 'index', 'index'.","ArrowFunctionExpression","unsafeRefs",["90"],["91"],"no-global-assign","no-unsafe-negation"]