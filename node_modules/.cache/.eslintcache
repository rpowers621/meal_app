[{"/home/rpowers8/project_2/src/index.js":"1","/home/rpowers8/project_2/src/App.js":"2","/home/rpowers8/project_2/src/Recipepage.js":"3","/home/rpowers8/project_2/src/Recipebox.js":"4","/home/rpowers8/project_2/src/Navbar.js":"5","/home/rpowers8/project_2/src/Login.js":"6","/home/rpowers8/project_2/src/UserProfile.js":"7","/home/rpowers8/project_2/src/Nutritionbreakdown.js":"8"},{"size":222,"mtime":1637695292662,"results":"9","hashOfConfig":"10"},{"size":492,"mtime":1638234536045,"results":"11","hashOfConfig":"10"},{"size":4561,"mtime":1638323623976,"results":"12","hashOfConfig":"10"},{"size":20512,"mtime":1638325665847,"results":"13","hashOfConfig":"10"},{"size":641,"mtime":1638234536045,"results":"14","hashOfConfig":"10"},{"size":2677,"mtime":1638325487088,"results":"15","hashOfConfig":"10"},{"size":721,"mtime":1637675797708,"results":"16","hashOfConfig":"10"},{"size":277,"mtime":1638323396596,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mmy93z",{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rpowers8/project_2/src/index.js",[],"/home/rpowers8/project_2/src/App.js",[],"/home/rpowers8/project_2/src/Recipepage.js",["36","37","38","39","40"],"import './App.css'\nimport { React, useEffect, useState } from 'react'\nimport { useLocation } from 'react-router';\nimport {useHistory } from 'react-router-dom';\n\n\n\nfunction Recipepage() {\n\n\n    \n    const [title, setTitle]= useState('');\n    const [servingSize, setServingSize]= useState('');\n    const [readyMins, setReadyMins] =useState('');\n    const [recipeImg, setRecipeImg]= useState('');\n    const [sourceURL, setSoureURL] =useState('');\n    const [dishType, setDishType]= useState('');\n    const [ingredients, setIngredients] =useState([]);\n    const [ingred_imgs, setIngredImg] = useState([]);\n    const [instruction, setInstruction]= useState([]);\n\n    const [day, setDay] = useState('');\n    const [id, setId] =useState(\"\");\n    const [update, setUpdate] = useState({});\n    const [titles, setTitles] = useState({});\n\n    const [message, setMessage] = useState(\"\");\n    \n\n\n\n    const location = useLocation();\n    useEffect(() => {\n        console.log(location.state.detail);\n        console.log(location.state.detail.recipe_title);\n        setTitle(location.state.detail.recipe_title);\n        setServingSize(location.state.detail.servings);\n        setReadyMins(location.state.detail.ready_in_mins);\n        setRecipeImg(location.state.detail.recipe_img);\n        setSoureURL(location.state.detail.source_url);\n        setDishType(location.state.detail.dish_type);\n        setIngredients(location.state.detail.ingredients);\n        setIngredImg(location.state.detail.ingred_imgs);\n        setInstruction(location.state.detail.instructions);\n        setId(location.state.detail.id)\n    }, [location]);\n\n\n    const history = useHistory();\n    function route(){\n        let path = '/Recipebox';\n        history.push(\n           { pathname: path,\n             state: {detail: location.state.detail}\n         });\n \n     }\n\n\n    function addToDB() {\n        update[id]= day;\n        setUpdate(update);\n    \n        fetch(\"/update\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ \"update\": update, \"title\" : title }),\n        }).then((response) => response.json()).then((data) => {\n            console.log(data);\n            setMessage(\"Recipe Added!\");\n          \n    });\n}\n\n\nconst ingredsList = [];\nfor(const [index,value]of ingredients.entries()){\n    ingredsList.push(<li key={index}>{value}</li>)\n}\n\n    return (\n        <div>\n            <button onClick={route}> Back To Mealboard</button> \n\n            <div className=\"row\">\n            \n                <div className=\"col\" id=\"left-side\">\n                    <h1>{title}</h1>\n\n                    <h4> Serving Size: {servingSize}</h4>\n                        <img src={recipeImg} />\n           \n                    <h4> Ready in: {readyMins} minutes</h4>\n\n                \n                 \n                    \n                    <a href={sourceURL} style={{color : 'black'}}> Link to Recipe's Original Website </a>\n\n                    <div className=\"add-to-mb\">\n                            <select onChange={(e) => setDay(e.target.value)} >\n                                <option value='default'> Pick Day </option>\n                                <option value=\"1\">Monday</option>\n                                <option value=\"2\">Tuesday</option>\n                                <option value=\"3\">Wednesday</option>\n                                <option value=\"4\">Thursday</option>\n                                <option value=\"5\">Friday</option>\n                                <option value=\"6\">Saturday</option>\n                                <option value=\"7\">Sunday</option>\n                            </select>\n                            <button onClick={addToDB}>Add recipe!</button>\n                            <p>{message}</p>\n                            \n                    </div>\n                \n                  \n\n                </div>\n\n            </div>\n            <h3> Ingredients </h3>\n                <br></br>\n                <br></br>\n            <div>\n               \n                <ul>{ingredsList}</ul>\n            </div>\n            <br></br>\n            <br></br>      \n            <div>\n                {instruction.map((value, index)=>(\n                    <div>\n                        <p> Step {index+1}: {value}</p>\n                        <br></br>  \n                    </div>\n                ))}\n            </div>\n          \n            <footer>\n              \n            </footer>\n        </div >\n    );\n\n}\nexport default Recipepage;","/home/rpowers8/project_2/src/Recipebox.js",["41","42","43"],"/home/rpowers8/project_2/src/Navbar.js",[],"/home/rpowers8/project_2/src/Login.js",["44"],"import React, { useState } from 'react';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport UserProfile from './UserProfile';\nconst clientId = process.env.REACT_APP_CLIENTID;\n\nfunction Login() {\n   \n\n    const [username, setusername] = useState(\"\");\n    const [useremail, setuseremail] = useState(\"\");\n    const [userimage, setuserimage] = useState(\"\");\n\n    const [showloginButton, setShowloginButton] = useState(true);\n    const [showlogoutButton, setShowlogoutButton] = useState(false);\n    const onLoginSuccess = (res) => {\n        console.log('Login Success:', res.profileObj);\n        setShowloginButton(false);\n        setShowlogoutButton(true);\n        setusername(res.profileObj.name);\n        setuseremail(res.profileObj.email);\n        setuserimage(res.profileObj.imageUrl);\n        UserProfile.setEmail(res.profileObj.email);\n        UserProfile.setName(res.profileObj.name);\n        fetchEmail(res.profileObj.email);\n        \n    };\n\n    const onLoginFailure = (res) => {\n        console.log('Login Failed:', res);\n    };\n\n    const onSignoutSuccess = () => {\n        alert(\"You have been logged out successfully\");\n        console.clear();\n        setShowloginButton(true);\n        setShowlogoutButton(false);\n        UserProfile.setEmail(\"\");\n        UserProfile.setName(\"\");\n        setusername('');\n        setuseremail('');\n        setuserimage('');\n        fetch(\"/logout\", {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          });\n    };\n\n    function fetchEmail(email){\n\n        fetch(\"/\", {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify( {'email': email}),\n          });\n   \n    }\n\n    return (\n        <div>\n            <div className=\"user-info\">\n                <img src={userimage} atl=\"\"/>\n                <p>{username}</p>\n                <p>{useremail}</p>\n            </div>\n            { showloginButton ?\n                <GoogleLogin\n                    clientId={clientId}\n                    buttonText=\"Sign In\"\n                    onSuccess={onLoginSuccess}\n                    onFailure={onLoginFailure}\n                    cookiePolicy={'single_host_origin'}\n                    isSignedIn={true}\n                /> : null}\n\n            { showlogoutButton ?\n                <GoogleLogout\n                    clientId={clientId}\n                    buttonText=\"Sign Out\"\n                    onLogoutSuccess={onSignoutSuccess}\n                >\n                </GoogleLogout> : null\n            }\n        </div>\n    );\n}\nexport default Login;\n","/home/rpowers8/project_2/src/UserProfile.js",[],"/home/rpowers8/project_2/src/Nutritionbreakdown.js",[],{"ruleId":"45","severity":1,"message":"46","line":17,"column":12,"nodeType":"47","messageId":"48","endLine":17,"endColumn":20},{"ruleId":"45","severity":1,"message":"49","line":19,"column":12,"nodeType":"47","messageId":"48","endLine":19,"endColumn":23},{"ruleId":"45","severity":1,"message":"50","line":25,"column":12,"nodeType":"47","messageId":"48","endLine":25,"endColumn":18},{"ruleId":"45","severity":1,"message":"51","line":25,"column":20,"nodeType":"47","messageId":"48","endLine":25,"endColumn":29},{"ruleId":"52","severity":1,"message":"53","line":93,"column":25,"nodeType":"54","endLine":93,"endColumn":48},{"ruleId":"45","severity":1,"message":"55","line":34,"column":12,"nodeType":"47","messageId":"48","endLine":34,"endColumn":19},{"ruleId":"45","severity":1,"message":"56","line":40,"column":12,"nodeType":"47","messageId":"48","endLine":40,"endColumn":15},{"ruleId":"57","severity":1,"message":"58","line":283,"column":136,"nodeType":"59","messageId":"60","endLine":283,"endColumn":213},{"ruleId":"52","severity":1,"message":"53","line":65,"column":17,"nodeType":"54","endLine":65,"endColumn":46},"no-unused-vars","'dishType' is assigned a value but never used.","Identifier","unusedVar","'ingred_imgs' is assigned a value but never used.","'titles' is assigned a value but never used.","'setTitles' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'cSelect' is assigned a value but never used.","'cal' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'index', 'index'.","ArrowFunctionExpression","unsafeRefs"]