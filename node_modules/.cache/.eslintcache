[{"/home/adithyazure/meal_app/src/index.js":"1","/home/adithyazure/meal_app/src/App.js":"2","/home/adithyazure/meal_app/src/Recipepage.js":"3","/home/adithyazure/meal_app/src/Navbar.js":"4","/home/adithyazure/meal_app/src/Recipebox.js":"5","/home/adithyazure/meal_app/src/UserProfile.js":"6","/home/adithyazure/meal_app/src/LoginPage.js":"7","/home/adithyazure/meal_app/src/Pages/About.js":"8","/home/adithyazure/meal_app/src/Pages/Contact.js":"9","/home/adithyazure/meal_app/src/Store/appContext.js":"10","/home/adithyazure/meal_app/src/Store/flux.js":"11","/home/adithyazure/meal_app/src/Components/Login.js":"12"},{"size":223,"mtime":1638052506344,"results":"13","hashOfConfig":"14"},{"size":920,"mtime":1638087651502,"results":"15","hashOfConfig":"14"},{"size":2352,"mtime":1637698171266,"results":"16","hashOfConfig":"14"},{"size":1400,"mtime":1638116990558,"results":"17","hashOfConfig":"14"},{"size":19588,"mtime":1638052506316,"results":"18","hashOfConfig":"14"},{"size":721,"mtime":1637698171266,"results":"19","hashOfConfig":"14"},{"size":1798,"mtime":1638124734565,"results":"20","hashOfConfig":"14"},{"size":732,"mtime":1638087588834,"results":"21","hashOfConfig":"14"},{"size":1537,"mtime":1638087680978,"results":"22","hashOfConfig":"14"},{"size":1712,"mtime":1638089153592,"results":"23","hashOfConfig":"14"},{"size":2187,"mtime":1638118541820,"results":"24","hashOfConfig":"14"},{"size":2043,"mtime":1638092270939,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12v8sly",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":1,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},"/home/adithyazure/meal_app/src/index.js",[],"/home/adithyazure/meal_app/src/App.js",[],"/home/adithyazure/meal_app/src/Recipepage.js",["54","55","56"],"import './App.css'\nimport { React, useEffect, useState } from 'react'\nimport { useLocation } from 'react-router';\nimport {useHistory } from 'react-router-dom';\n\n\nfunction Recipepage() {\n\n    const placeholder = {\"step1\" : \"\"};\n\n    \n    const [title, setTitle]= useState('');\n    const [servingSize, setServingSize]= useState('');\n    const [readyMins, setReadyMins] =useState('');\n    const [recipeImg, setRecipeImg]= useState('');\n    const [sourceURL, setSoureURL] =useState('');\n    const [dishType, setDishType]= useState('');\n    const [ingredients, setIngredients] =useState('');\n    const [instruction, setInstruction]= useState(placeholder);\n\n\n\n    const location = useLocation();\n    useEffect(() => {\n        console.log(location.state.detail);\n        console.log(location.state.detail.recipe_title);\n        setTitle(location.state.detail.recipe_title);\n        setServingSize(location.state.detail.servings);\n        setReadyMins(location.state.detail.ready_in_mins);\n        setRecipeImg(location.state.detail.recipe_img);\n        setSoureURL(location.state.detail.source_url);\n        setDishType(location.state.detail.dish_type);\n        setIngredients(location.state.detail.ingredients);\n        setInstruction(location.state.detail.instruction);\n    }, [location]);\n\n\n    const history = useHistory();\n    function route(){\n        let path = '/Recipebox';\n        history.push(\n           { pathname: path,\n             state: {detail: location.state.detail}\n         });\n \n     }\n  \n\n    return (\n        <div>\n            <button onClick={route}> Back </button> \n\n            <div className=\"row\" style={{backgroundImage: \"url(\" + {recipeImg} + \")\",backgroundPosition: 'center',backgroundSize: 'cover',\n                backgroundRepeat: 'no-repeat'}}>\n                <div className=\"col\" id=\"left-side\">\n                    <h1>{title}</h1>\n\n                    <h4> Serving Size: {servingSize}</h4>\n\n                    <h4> Ready in: {readyMins} minutes</h4>\n\n                \n                 \n                    \n                    <a href={sourceURL} style={{color : 'black'}}> Link to Recipe's Original Website </a>\n                  \n\n                </div>\n\n            </div>\n           \n          \n            <footer>\n                <p></p>\n            </footer>\n        </div >\n    );\n\n}\nexport default Recipepage;","/home/adithyazure/meal_app/src/Navbar.js",[],"/home/adithyazure/meal_app/src/Recipebox.js",["57"],"import { React, useState, useEffect } from 'react'\nimport { useHistory, } from 'react-router-dom';\nimport './App.css'\nimport UserProfile from './UserProfile';\n\nfunction Recipebox() {\n\n    const [searchType, setSearchType] = useState('');\n    const [searchCriteria, setSearchCriteria] = useState('');\n    const [meals, setMeals] = useState([\"\"]);\n    const [meal_ids, setMeal_ids] = useState([\"\"]);\n    const [recipeData, setRecipeData] = useState(\"\");\n    const [day, setDay] = useState('');\n    const [mon, setMon] = useState(['']);\n    const [tues, setTues] = useState(['']);\n    const [wed, setWed] = useState(['']);\n    const [thur, setThur] = useState(['']);\n    const [fri, setFri] = useState(['']);\n    const [sat, setSat] = useState(['']);\n    const [sun, setSun] = useState(['']);\n  \n    const [monId, setMonId] = useState('');\n    const [tuesId, setTuesId] = useState('');\n    const [wedId, setWedId] = useState('');\n    const [thurId, setThurId] = useState('');\n    const [friId, setFriId] = useState('');\n    const [satId, setSatId] = useState('');\n    const [sunId, setSunId] = useState('');\n\n    const [update, setUpdate] = useState({});\n    const [titles, setTitles] = useState({});\n\n    const [iSelect, setI] = useState(false);\n    const [cSelect, setC] = useState(false);\n    const [dSelect, setD] = useState(false);\n    const [cuSelect, setCU] = useState(false);\n\n    const [active, setActive] = useState();\n\n    const [cal, setCal]= useState(\"\");\n    const [ingred, setIngred] = useState(\"\");\n\n    \n\n    useEffect(() => {\n\n        fetch(\"/connectDB\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => response.json()).then((data) => {\n            console.log(data);\n            setMon(data.mon_name);\n            setMonId(data.mon_ids);\n            setTues(data.tues_name);\n            setTuesId(data.tues_ids);\n            setWed(data.wed_name);\n            setWedId(data.wed_ids);\n            setThur(data.thur_name);\n            setThurId(data.thur_ids);\n            setFri(data.fri_name);\n            setFriId(data.fri_ids);\n            setSat(data.sat_name);\n            setSatId(data.sat_ids);\n            setSun(data.sun_name);\n            setSunId(data.sun_ids);\n\n\n        });\n    }, [])\n\n    \n\n    function add(e) {\n        console.log(e);\n        if( e !== \"\"){\n            setSearchCriteria([e]);\n        }\n       \n        setI(false);\n        setC(false);\n        setD(false);\n        setCU(false);\n        setCal(\"\");\n        setIngred(\"\");\n    }\n\n    function refresh() {\n        setSearchCriteria('');\n        setSearchType('');\n        setMeal_ids(['']);\n        setMeals(['']);\n\n    }\n \n    function send() {\n\n        fetch(\"/getsuggestions\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ 'searchCritria': searchCriteria, \"searchType\": searchType }),\n        }).then((response) => response.json()).then((data) => {\n            console.log(data);\n            setMeals([...meals,data.key]);\n            setMeal_ids([...meal_ids,data.value]);\n\n            setI(false);\n            setC(false);\n            setD(false);\n            setCU(false);\n\n        });\n        return;\n\n    }\n\n    const history = useHistory();\n    function recipe_page(e) {\n        console.log(e);\n\n        fetch(\"/recipepage\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ \"id\": e }),\n        }).then((response) => response.json()).then((data) => {\n            console.log(data);\n            setRecipeData(data);\n        });\n\n    }\n\n    function route() {\n        \n        let path = '/Recipepage';\n\n        history.push(\n            {\n                pathname: path,\n                state: { detail: recipeData }\n            });\n\n    }\n\n    function addToBoard(e) {\n        console.log(meal_ids[e]);\n        console.log(day);\n     \n        update[meal_ids[e]]= day;\n    \n\n        setUpdate(update);\n        setTitles(meals[e]);\n    }\n\n    function addToDB() {\n        console.log(update);\n        console.log(titles);\n\n        fetch(\"/update\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ \"update\": update, \"title\" : titles }),\n        }).then((response) => response.json()).then((data) => {\n            console.log(data);\n            setDay(\"\");\n            setUpdate({});\n            setTitles(\"\");\n        });\n    }\n\n\n    var sug_box = []\n    for(var [index, value]of meals.entries()){\n        sug_box.push( <div>\n            <input onChange={(e) => addToBoard(e.target.value)} type=\"checkbox\" name=\"ingreds\"\n                value=\"1\" />\n            <button style={active === index+1 ? {backgroundColor: 'red' }: {}}className=\"recipe-button\" value={meal_ids[index+1]} onClick={(e) => {recipe_page(e.target.value); setActive(1)}}> {meals[index+1]}</button>\n        </div>)\n    }\n\n\n    const mon_items = [];\n    for(const [index,value]of mon.entries()){\n        mon_items.push(<button style={active === index+\"m\" ? {backgroundColor: 'red' }: {}} value={monId[index]} onClick={(e)=> {recipe_page(e.target.value); setActive(index+\"m\");}}>{value}</button>)\n    }\n\n    const tues_items = [];\n    for(const [index,value]of tues.entries()){\n        tues_items.push(<button style={active === index+\"t\" ? {backgroundColor: 'red' }: {}} value={tuesId[index]} onClick={(e)=> {recipe_page(e.target.value); setActive(index+\"t\");}}>{value}</button>)\n    }\n\n    const wed_items = [];\n    for(const [index,value]of wed.entries()){\n        wed_items.push(<button style={active === index+\"w\" ? {backgroundColor: 'red' }: {}} value={wedId[index]} onClick={(e)=> {recipe_page(e.target.value); setActive(index+\"w\");}}>{value}</button>)\n    }\n\n    const thur_items = [];\n    for(const [index,value]of thur.entries()){\n        thur_items.push(<button style={active === index+\"th\" ? {backgroundColor: 'red' }: {}} value={thurId[index]} onClick={(e)=> {recipe_page(e.target.value); setActive(index+\"th\");}}>{value}</button>)\n    }\n\n    const fri_items = [];\n    for(const [index,value]of fri.entries()){\n        fri_items.push(<button style={active === index+\"f\" ? {backgroundColor: 'red' }: {}} value={friId[index]} onClick={(e)=> {recipe_page(e.target.value); setActive(index+\"f\");}}>{value}</button>)\n    }\n\n    const sat_items = [];\n    for(const [index,value]of sat.entries()){\n        sat_items.push(<button  style={active === index+\"s\" ? {backgroundColor: 'red' }: {}} value={satId[index]} onClick={(e)=> {recipe_page(e.target.value); setActive(index+\"s\");}}>{value}</button>)\n    }\n\n    const sun_items = [];\n    for(const [index,value]of sun.entries()){\n        sun_items.push(<button style={active === index+\"sn\" ? {backgroundColor: 'red' }: {}} value={sunId[index]} onClick={(e)=> {recipe_page(e.target.value); setActive(index+\"sn\");}}>{value}</button>)\n    }\n    return (\n\n        <div className=\"box\">\n            <h1> {UserProfile.getName()}&apos;s Mealboard</h1>\n            <div className=\"row\">\n\n                <div className=\"col\">\n                    <div className=\"recipe_search_box\">\n                        <h1>Search For Recipes</h1>\n\n                        <div className=\"by_ingreds\">\n                            <input onClick={() => {setSearchType('ingredients'); setI(true);}} checked={iSelect} type=\"checkbox\" name=\"ingreds\"\n                                value=\"Search by Ingredients\" />\n                            <label id=\"ingredients\" className=\"label-header\" htmlFor=\"ingreds\">Search by Ingredients</label>\n                            <br></br>\n                            <label htmlFor=\"\">Enter Ingredient</label>\n                            <input data-testid=\"Enter_Ingredient\" value={ingred} on onChangeCapture={(e) => {add(e.target.value); setIngred(e.target.value);}} id=\"ingreds\" type=\"text\" />\n                            \n                            <button onClick={send}>Add Ingredients</button>\n\n\n                            <br />\n                        </div>\n\n                        <div className=\"by_calories\">\n                            <input onInput={() => {setSearchType('calories'); setC(true);}} checked={cSelect} type=\"checkbox\" name=\"calories\"\n                                value=\"Search by Calories\" />\n                            <label className=\"label-header\" htmlFor=\"calories\">Search by Calories</label>\n                            <br />\n                            <label htmlFor=\"\">Enter Calories Amount</label>\n                            <input value={cal} onChange={(e) => {add(e.target.value); setCal(e.target.value);}} id=\"calories\" type=\"text\" />\n                            <button onClick={send}>Add Calories</button>\n                        </div>\n\n                        <div className=\"by_diet\">\n                            <input onClick={() => {setSearchType('diet'); setD(true);}} checked={dSelect} type=\"checkbox\" name=\"diet\"\n                                value=\"Search by Diet\" />\n                            <label className=\"label-header\" htmlFor=\"diet\">Search by Diet</label>\n                            <br />\n                            <div className=\"drop-diet\">\n                                <select onChange={(e) => add(e.target.value)} id=\"diet\" name=\"\" placeholder=\" \">\n                                    <option value=\"Gluten Free\">Gluten Free</option>\n                                    <option value=\"Ketogenic\">Ketogenic</option>\n                                    <option value=\"Vegetarian\">Vegetarian</option>\n                                    <option value=\"Lacto-Vegetarian\">Lacto-Vegetarian</option>\n                                    <option value=\"Ovo-Vegetarian\">Ovo-Vegetarian</option>\n                                    <option value=\"Vegan\">Vegan</option>\n                                    <option value=\"Pescetarian\">Pescetarian</option>\n                                    <option value=\"Paleo\">Paleo</option>\n                                    <option value=\"Primal\">Primal</option>\n                                    <option value=\"Low FODMAP\">Low FODMAP</option>\n                                    <option value=\"Whole30\">Whole30</option>\n                                </select>\n                            </div>\n                            <button onClick={send}>Add Diet</button>\n                        </div>\n\n                        <div className=\"by_cuisine\">\n                            <input onClick={() => {setSearchType('cuisine'); setCU(true);}} checked={cuSelect} type=\"checkbox\" name=\"cuisine\"\n                                value=\"Search by Cuisine\" />\n                            <label className=\"label-header\" htmlFor=\"cuisine\">Search by Cuisine</label>\n                            <br />\n                            <div className=\"drop-cuisine\">\n                                <select onChange={(e) => add(e.target.value)} id=\"cuisine\" name=\"\">\n                                    <option value=\"African\">African</option>\n                                    <option value=\"American\">American</option>\n                                    <option value=\"British\">British</option>\n                                    <option value=\"Cajun\">Cajun</option>\n                                    <option value=\"Caribbean\">Caribbean</option>\n                                    <option value=\"Chinese\">Chinese</option>\n                                    <option value=\"Eastern European\">Eastern European</option>\n                                    <option value=\"European\">European</option>\n                                    <option value=\"French\">French</option>\n                                    <option value=\"German\">German</option>\n                                    <option value=\"Greek\">Greek</option>\n                                    <option value=\"Indian\">Indian</option>\n                                    <option value=\"Irish\">Irish</option>\n                                    <option value=\"Italian\">Italian</option>\n                                    <option value=\"Japanese\">Japanese</option>\n                                    <option value=\"Jewish\">Jewish</option>\n                                    <option value=\"Korean\">Korean</option>\n                                    <option value=\"Latin American\">Latin American</option>\n                                    <option value=\"Mediterranean\">Mediterranean</option>\n                                    <option value=\"Mexican\">Mexican</option>\n                                    <option value=\"Middle Eastern\">Middle Eastern</option>\n                                    <option value=\"Nordic\">Nordic</option>\n                                    <option value=\"Southern\">Southern</option>\n                                    <option value=\"Spanish\">Spanish</option>\n                                    <option value=\"Thai\">Thai</option>\n                                    <option value=\"Vietnamese\">Vietnamese</option>\n                                </select>\n                            </div>\n                            <button onClick={send}>Add Cuisine</button>\n\n                            <button onClick={refresh}> refresh</button>\n\n                            <p>Please first select how you'd like to search, then press add to see a suggestion!</p>\n                            <p> To get another recipe deselect and start again!</p>\n                        </div>\n                    </div>\n                </div>\n                <div className='col'>\n                    <div className=\"suggestion-box\">\n                        <h3>Suggestion Box</h3>\n                        <p> To view a Recipe please slect recipe and click Go to Recipe Page! </p>\n                        \n                        <div className=\"add-to-mb\">\n                            <select onChange={(e) => setDay(e.target.value)} >\n                                <option value='default' disabled> Pick Day </option>\n                                <option value=\"1\">Monday</option>\n                                <option value=\"2\">Tuesday</option>\n                                <option value=\"3\">Wednesday</option>\n                                <option value=\"4\">Thursday</option>\n                                <option value=\"5\">Friday</option>\n                                <option value=\"6\">Saturday</option>\n                                <option value=\"7\">Sunday</option>\n                            </select>\n                            \n                        </div>\n\n                        {sug_box}\n\n                       \n\n                        <button onClick={addToDB}>Add</button>\n\n                        <button onClick={route}>Go to Recipe page!</button>\n                    </div>\n                </div>\n                <div className='col'>\n                    <div className=\"monday\">\n                        <h3>Monday</h3>\n                        <div className=\"row\">\n                            <div className=\"row-top\">\n                                {mon_items}\n                            </div>\n                        </div>\n                        <div className='row'>\n                            <div className=\"row-bottom\">\n                                <button onClick={route}>Go to Recipe page!</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className='col'>\n                    <div className=\"tuesday\">\n                        <h3>Tuesday</h3>\n                        <div className=\"row\">\n                            <div className=\"row-top\">\n                            {tues_items}\n                            </div>\n                        </div>\n                        <div className='row'>\n                            <div className=\"row-bottom\">\n                                <button onClick={route}>Go to Recipe page!</button>\n                            </div>\n                        </div>\n                        \n                    </div>\n                </div>\n                <div className='col'>\n                    <div className=\"wednesday\">\n                        <h3>Wednesday</h3>\n                        <div className=\"row\">\n                            <div className=\"row-top\">\n                            {wed_items}\n                            </div>\n                        </div>\n                        <div className='row'>\n                            <div className=\"row-bottom\">\n                                <button onClick={route}>Go to Recipe page!</button>\n                            </div>\n                        </div>\n                        \n                    </div>\n                </div>\n                <div className='col'>\n                    <div className=\"thursday\">\n                        <h3>Thursday</h3>\n                        <div className=\"row\">\n                            <div className=\"row-top\">\n                            {thur_items}\n                            </div>\n                        </div>\n                        <div className='row'>\n                            <div className=\"row-bottom\">\n                                <button onClick={route}>Go to Recipe page!</button>\n                            </div>\n                        </div>\n                    \n                    </div>\n                </div>\n                <div className='col'>\n                    <div className=\"friday\">\n                        <h3>Friday</h3>\n                        <div className=\"row\">\n                            <div className=\"row-top\">\n                            {fri_items}\n                            </div>\n                        </div>\n                        <div className='row'>\n                            <div className=\"row-bottom\">\n                                <button onClick={route}>Go to Recipe page!</button>\n                            </div>\n                        </div>\n                        \n                    </div>\n                </div>\n                <div className='col'>\n                    <div className=\"saturday\">\n                        <h3>Saturday</h3>\n                        <div className=\"row\">\n                            <div className=\"row-top\">\n                            {sat_items}\n                            </div>\n                        </div>\n                        <div className='row'>\n                            <div className=\"row-bottom\">\n                                <button onClick={route}>Go to Recipe page!</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className='col'>\n                    <div className=\"sunday\">\n                        <h3>Sunday</h3>\n                        <div className=\"row\">\n                            <div className=\"row-top\">\n                            {sun_items}\n                            </div>\n                        </div>\n                        <div className='row'>\n                            <div className=\"row-bottom\">\n                                <button onClick={route}>Go to Recipe page!</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n}\nexport default Recipebox;","/home/adithyazure/meal_app/src/UserProfile.js",[],"/home/adithyazure/meal_app/src/LoginPage.js",["58","59","60","61","62"],"/home/adithyazure/meal_app/src/Pages/About.js",[],"/home/adithyazure/meal_app/src/Pages/Contact.js",[],"/home/adithyazure/meal_app/src/Store/appContext.js",["63"],"import React, { useState, useEffect } from \"react\";\nimport getState from \"./flux.js\";\n\n// Don't change, here is where we initialize our context, by default it's just going to be null.\nexport const Context = React.createContext(null);\n\n// This function injects the global store to any view/component where you want to use it, we will inject the context to layout.js, you can see it here:\n// https://github.com/4GeeksAcademy/react-hello-webapp/blob/master/src/js/layout.js#L35\nconst injectContext = PassedComponent => {\n\tconst StoreWrapper = props => {\n\t\t//this will be passed as the contenxt value\n\t\tconst [state, setState] = useState(\n\t\t\tgetState({\n\t\t\t\tgetStore: () => state.store,\n\t\t\t\tgetActions: () => state.actions,\n\t\t\t\tsetStore: updatedStore =>\n\t\t\t\t\tsetState({\n\t\t\t\t\t\tstore: Object.assign(state.store, updatedStore),\n\t\t\t\t\t\tactions: { ...state.actions }\n\t\t\t\t\t})\n\t\t\t})\n\t\t);\n\n\t\tuseEffect(() => {\n\t\t\t/**\n\t\t\t * EDIT THIS!\n\t\t\t * This function is the equivalent to \"window.onLoad\", it only runs once on the entire application lifetime\n\t\t\t * you should do your ajax requests or fetch api requests here. Do not use setState() to save data in the\n\t\t\t * store, instead use actions, like this:\n\t\t\t **/\n\t\t\tstate.actions.getMessage(); // <---- calling this function from the flux.js actions\n\t\t}, []);\n\n\t\t// The initial value for the context is not null anymore, but the current state of this component,\n\t\t// the context will now have a getStore, getActions and setStore functions available, because they were declared\n\t\t// on the state of this component\n\t\treturn (\n\t\t\t<Context.Provider value={state}>\n\t\t\t\t<PassedComponent {...props} />\n\t\t\t</Context.Provider>\n\t\t);\n\t};\n\treturn StoreWrapper;\n};\n\nexport default injectContext;","/home/adithyazure/meal_app/src/Store/flux.js",[],"/home/adithyazure/meal_app/src/Components/Login.js",["64"],"import React, { useState } from \"react\";\nimport { GoogleLogin, GoogleLogout } from \"react-google-login\";\nimport UserProfile from \"../UserProfile\";\nconst clientId = process.env.REACT_APP_CLIENTID;\n\nfunction Login() {\n  const [username, setusername] = useState(\"\");\n  const [useremail, setuseremail] = useState(\"\");\n  const [userimage, setuserimage] = useState(\"\");\n\n  const [showloginButton, setShowloginButton] = useState(true);\n  const [showlogoutButton, setShowlogoutButton] = useState(false);\n  const onLoginSuccess = (res) => {\n    console.log(\"Login Success:\", res.profileObj);\n    setShowloginButton(false);\n    setShowlogoutButton(true);\n    setusername(res.profileObj.name);\n    setuseremail(res.profileObj.email);\n    setuserimage(res.profileObj.imageUrl);\n    UserProfile.setEmail(res.profileObj.email);\n    UserProfile.setName(res.profileObj.name);\n    fetchEmail(res.profileObj.email);\n  };\n\n  const onLoginFailure = (res) => {\n    console.log(\"Login Failed:\", res);\n  };\n\n  const onSignoutSuccess = () => {\n    alert(\"You have been logged out successfully\");\n    console.clear();\n    setShowloginButton(true);\n    setShowlogoutButton(false);\n  };\n\n  function fetchEmail(email) {\n    fetch(\"/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email: email }),\n    });\n  }\n\n  return (\n    <div>\n      <div className=\"user-info\">\n        <img src={userimage} atl=\"\" />\n        <p>{username}</p>\n        <p>{useremail}</p>\n      </div>\n      {showloginButton ? (\n        <GoogleLogin\n          clientId={clientId}\n          buttonText=\"Sign In\"\n          onSuccess={onLoginSuccess}\n          onFailure={onLoginFailure}\n          cookiePolicy={\"single_host_origin\"}\n          isSignedIn={true}\n        />\n      ) : null}\n\n      {showlogoutButton ? (\n        <GoogleLogout\n          clientId={clientId}\n          buttonText=\"Sign Out\"\n          onLogoutSuccess={onSignoutSuccess}\n        ></GoogleLogout>\n      ) : null}\n    </div>\n  );\n}\nexport default Login;\n",{"ruleId":"65","severity":1,"message":"66","line":17,"column":12,"nodeType":"67","messageId":"68","endLine":17,"endColumn":20},{"ruleId":"65","severity":1,"message":"69","line":18,"column":12,"nodeType":"67","messageId":"68","endLine":18,"endColumn":23},{"ruleId":"65","severity":1,"message":"70","line":19,"column":12,"nodeType":"67","messageId":"68","endLine":19,"endColumn":23},{"ruleId":"65","severity":1,"message":"71","line":180,"column":21,"nodeType":"67","messageId":"68","endLine":180,"endColumn":26},{"ruleId":"65","severity":1,"message":"72","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":27},{"ruleId":"65","severity":1,"message":"73","line":3,"column":10,"nodeType":"67","messageId":"68","endLine":3,"endColumn":17},{"ruleId":"74","severity":2,"message":"75","line":13,"column":5,"nodeType":"67","messageId":"76","endLine":13,"endColumn":12},{"ruleId":"77","severity":1,"message":"78","line":43,"column":23,"nodeType":"79","messageId":"80","endLine":43,"endColumn":25},{"ruleId":"77","severity":1,"message":"78","line":43,"column":38,"nodeType":"79","messageId":"80","endLine":43,"endColumn":40},{"ruleId":"81","severity":1,"message":"82","line":32,"column":6,"nodeType":"83","endLine":32,"endColumn":8,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":49,"column":9,"nodeType":"87","endLine":49,"endColumn":39},"no-unused-vars","'dishType' is assigned a value but never used.","Identifier","unusedVar","'ingredients' is assigned a value but never used.","'instruction' is assigned a value but never used.","'value' is assigned a value but never used.","'useContext' is defined but never used.","'Context' is defined but never used.","no-undef","'actions' is not defined.","undef","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state.actions'. Either include it or remove the dependency array.","ArrayExpression",["88"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"89","fix":"90"},"Update the dependencies array to be: [state.actions]",{"range":"91","text":"92"},[1285,1287],"[state.actions]"]