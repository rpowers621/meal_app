{"ast":null,"code":"var _jsxFileName = \"/home/mphan13/meal_app/src/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { GoogleLogin, GoogleLogout, useGoogleLogin } from \"react-google-login\";\nimport UserProfile from \"./UserProfile\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = process.env.REACT_APP_CLIENTID;\nconst redirectUri = process.env.REDIRECT_URI;\n\nfunction Login() {\n  _s();\n\n  const [username, setusername] = useState(\"\");\n  const [useremail, setuseremail] = useState(\"\");\n  const [userimage, setuserimage] = useState(\"\");\n  const [showloginButton, setShowloginButton] = useState(true);\n  const [showlogoutButton, setShowlogoutButton] = useState(false);\n\n  const onLoginSuccess = res => {\n    console.log(\"Login Success:\", res.profileObj);\n    setShowloginButton(false);\n    setShowlogoutButton(true);\n    setusername(res.profileObj.name);\n    setuseremail(res.profileObj.email);\n    setuserimage(res.profileObj.imageUrl);\n    UserProfile.setEmail(res.profileObj.email);\n    UserProfile.setName(res.profileObj.name);\n    fetchEmail(res.profileObj.email);\n  };\n\n  const onLoginFailure = res => {\n    console.log(\"Login Failed:\", res);\n  };\n\n  const onSignoutSuccess = () => {\n    alert(\"You have been logged out successfully\");\n    console.clear();\n    setShowloginButton(true);\n    setShowlogoutButton(false);\n    UserProfile.setEmail(\"\");\n    UserProfile.setName(\"\");\n    setusername(\"\");\n    setuseremail(\"\");\n    setuserimage(\"\");\n  };\n\n  const {\n    signIn,\n    loaded\n  } = useGoogleLogin({\n    onSuccess: onLoginSuccess,\n    clientId: clientId,\n    onFailure: onLoginFailure,\n    redirectUri: redirectUri\n  });\n\n  function fetchEmail(email) {\n    fetch(\"/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email\n      })\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: userimage,\n        atl: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: useremail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), showloginButton ? /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: clientId,\n      buttonText: \"Sign In\",\n      onSuccess: onLoginSuccess,\n      onFailure: onLoginFailure,\n      cookiePolicy: \"single_host_origin\",\n      isSignedIn: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) //<button onClick={signIn}>Button</button>\n    : null, showlogoutButton ? /*#__PURE__*/_jsxDEV(GoogleLogout, {\n      clientId: clientId,\n      buttonText: \"Sign Out\",\n      onLogoutSuccess: onSignoutSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"wXBdVLHQ+EGYdvLJkt0Cvybly+Q=\", false, function () {\n  return [useGoogleLogin];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/mphan13/meal_app/src/Login.js"],"names":["React","useState","GoogleLogin","GoogleLogout","useGoogleLogin","UserProfile","clientId","process","env","REACT_APP_CLIENTID","redirectUri","REDIRECT_URI","Login","username","setusername","useremail","setuseremail","userimage","setuserimage","showloginButton","setShowloginButton","showlogoutButton","setShowlogoutButton","onLoginSuccess","res","console","log","profileObj","name","email","imageUrl","setEmail","setName","fetchEmail","onLoginFailure","onSignoutSuccess","alert","clear","signIn","loaded","onSuccess","onFailure","fetch","method","headers","body","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { GoogleLogin, GoogleLogout, useGoogleLogin } from \"react-google-login\";\nimport UserProfile from \"./UserProfile\";\nimport \"./Login.css\";\nconst clientId = process.env.REACT_APP_CLIENTID;\nconst redirectUri = process.env.REDIRECT_URI;\n\nfunction Login() {\n\n\n  const [username, setusername] = useState(\"\");\n  const [useremail, setuseremail] = useState(\"\");\n  const [userimage, setuserimage] = useState(\"\");\n\n  const [showloginButton, setShowloginButton] = useState(true);\n  const [showlogoutButton, setShowlogoutButton] = useState(false);\n  const onLoginSuccess = (res) => {\n    console.log(\"Login Success:\", res.profileObj);\n    setShowloginButton(false);\n    setShowlogoutButton(true);\n    setusername(res.profileObj.name);\n    setuseremail(res.profileObj.email);\n    setuserimage(res.profileObj.imageUrl);\n    UserProfile.setEmail(res.profileObj.email);\n    UserProfile.setName(res.profileObj.name);\n    fetchEmail(res.profileObj.email);\n  };\n\n  const onLoginFailure = (res) => {\n    console.log(\"Login Failed:\", res);\n  };\n\n  const onSignoutSuccess = () => {\n    alert(\"You have been logged out successfully\");\n    console.clear();\n    setShowloginButton(true);\n    setShowlogoutButton(false);\n    UserProfile.setEmail(\"\");\n    UserProfile.setName(\"\");\n    setusername(\"\");\n    setuseremail(\"\");\n    setuserimage(\"\");\n  };\n\n  const { signIn, loaded } = useGoogleLogin({\n    onSuccess: onLoginSuccess,\n    clientId: clientId,\n    onFailure: onLoginFailure,\n    redirectUri: redirectUri,\n  });\n\n  function fetchEmail(email) {\n    fetch(\"/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email: email }),\n    });\n  }\n\n  return (\n    <div>\n      <div className=\"user-info\">\n        <img src={userimage} atl=\"\" />\n        <p>{username}</p>\n        <p>{useremail}</p>\n      </div>\n      {showloginButton ? (\n        <GoogleLogin\n          clientId={clientId}\n          buttonText=\"Sign In\"\n          onSuccess={onLoginSuccess}\n          onFailure={onLoginFailure}\n          cookiePolicy={\"single_host_origin\"}\n          isSignedIn={true}\n        />\n        //<button onClick={signIn}>Button</button>\n      ) : null}\n\n      {showlogoutButton ? (\n        <GoogleLogout\n          clientId={clientId}\n          buttonText=\"Sign Out\"\n          onLogoutSuccess={onSignoutSuccess}\n        ></GoogleLogout>\n      ) : null}\n    </div>\n  );\n}\nexport default Login;"]},"metadata":{},"sourceType":"module"}