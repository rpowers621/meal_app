{"ast":null,"code":"import _regeneratorRuntime from\"/home/adithyazure/meal_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/adithyazure/meal_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var getState=function getState(_ref){var getStore=_ref.getStore,getActions=_ref.getActions,setStore=_ref.setStore;return{store:{token:null,message:null,demo:[{title:\"FIRST\",background:\"white\",initial:\"white\"},{title:\"SECOND\",background:\"white\",initial:\"white\"}]},actions:{// Use getActions to call a function within a fuction\nexampleFunction:function exampleFunction(){getActions().changeColor(0,\"green\");},login:function(){var _login=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(email,password){var opts,resp,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:opts={method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email:email,password:password})};_context.next=3;return fetch(\"http://127.0.0.1:3000/token\",opts);case 3:resp=_context.sent;_context.prev=4;if(!(resp.status!==200)){_context.next=8;break;}alert(\"There has been some error!\");return _context.abrupt(\"return\",false);case 8:_context.next=10;return resp.json();case 10:data=_context.sent;console.log(\"this came from the backend\",data.access_token);sessionStorage.setItem(\"token\",data.access_token);setStore({token:data.access_token});_context.next=19;break;case 16:_context.prev=16;_context.t0=_context[\"catch\"](4);console.error(\"There has been an error login in\");case 19:case\"end\":return _context.stop();}}},_callee,null,[[4,16]]);}));function login(_x,_x2){return _login.apply(this,arguments);}return login;}(),getMessage:function getMessage(){// fetching data from the backend\nfetch(process.env.BACKEND_URL+\"/api/hello\").then(function(resp){return resp.json();}).then(function(data){return setStore({message:data.message});}).catch(function(error){return console.log(\"Error loading message from backend\",error);});},changeColor:function changeColor(index,color){//get the store\nvar store=getStore();//we have to loop the entire demo array to look for the respective index\n//and change its color\nvar demo=store.demo.map(function(elm,i){if(i===index)elm.background=color;return elm;});//reset the global store\nsetStore({demo:demo});}}};};export default getState;","map":{"version":3,"sources":["/home/adithyazure/meal_app/src/Store/flux.js"],"names":["getState","getStore","getActions","setStore","store","token","message","demo","title","background","initial","actions","exampleFunction","changeColor","login","email","password","opts","method","headers","body","JSON","stringify","fetch","resp","status","alert","json","data","console","log","access_token","sessionStorage","setItem","error","getMessage","process","env","BACKEND_URL","then","catch","index","color","map","elm","i"],"mappings":"+RAAA,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAwC,IAArCC,CAAAA,QAAqC,MAArCA,QAAqC,CAA3BC,UAA2B,MAA3BA,UAA2B,CAAfC,QAAe,MAAfA,QAAe,CACvD,MAAO,CACLC,KAAK,CAAE,CACLC,KAAK,CAAE,IADF,CAELC,OAAO,CAAE,IAFJ,CAGLC,IAAI,CAAE,CACJ,CACEC,KAAK,CAAE,OADT,CAEEC,UAAU,CAAE,OAFd,CAGEC,OAAO,CAAE,OAHX,CADI,CAMJ,CACEF,KAAK,CAAE,QADT,CAEEC,UAAU,CAAE,OAFd,CAGEC,OAAO,CAAE,OAHX,CANI,CAHD,CADF,CAiBLC,OAAO,CAAE,CACP;AACAC,eAAe,CAAE,0BAAM,CACrBV,UAAU,GAAGW,WAAb,CAAyB,CAAzB,CAA4B,OAA5B,EACD,CAJM,CAMPC,KAAK,+EAAE,iBAAOC,KAAP,CAAcC,QAAd,qIACCC,IADD,CACQ,CACXC,MAAM,CAAE,MADG,CAEXC,OAAO,CAAE,CACP,eAAgB,kBADT,CAFE,CAKXC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBP,KAAK,CAAEA,KADY,CAEnBC,QAAQ,CAAEA,QAFS,CAAf,CALK,CADR,uBAWcO,CAAAA,KAAK,CAAC,6BAAD,CAAgCN,IAAhC,CAXnB,QAWCO,IAXD,oCAaCA,IAAI,CAACC,MAAL,GAAgB,GAbjB,0BAcDC,KAAK,CAAC,4BAAD,CAAL,CAdC,gCAeM,KAfN,gCAiBgBF,CAAAA,IAAI,CAACG,IAAL,EAjBhB,SAiBGC,IAjBH,eAkBHC,OAAO,CAACC,GAAR,CAAY,4BAAZ,CAA0CF,IAAI,CAACG,YAA/C,EACAC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAgCL,IAAI,CAACG,YAArC,EACA5B,QAAQ,CAAC,CAAEE,KAAK,CAAEuB,IAAI,CAACG,YAAd,CAAD,CAAR,CApBG,iFAsBHF,OAAO,CAACK,KAAR,CAAc,kCAAd,EAtBG,qEAAF,+EANE,CAgCPC,UAAU,CAAE,qBAAM,CAChB;AACAZ,KAAK,CAACa,OAAO,CAACC,GAAR,CAAYC,WAAZ,CAA0B,YAA3B,CAAL,CACGC,IADH,CACQ,SAACf,IAAD,QAAUA,CAAAA,IAAI,CAACG,IAAL,EAAV,EADR,EAEGY,IAFH,CAEQ,SAACX,IAAD,QAAUzB,CAAAA,QAAQ,CAAC,CAAEG,OAAO,CAAEsB,IAAI,CAACtB,OAAhB,CAAD,CAAlB,EAFR,EAGGkC,KAHH,CAGS,SAACN,KAAD,QACLL,CAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,CAAkDI,KAAlD,CADK,EAHT,EAMD,CAxCM,CAyCPrB,WAAW,CAAE,qBAAC4B,KAAD,CAAQC,KAAR,CAAkB,CAC7B;AACA,GAAMtC,CAAAA,KAAK,CAAGH,QAAQ,EAAtB,CAEA;AACA;AACA,GAAMM,CAAAA,IAAI,CAAGH,KAAK,CAACG,IAAN,CAAWoC,GAAX,CAAe,SAACC,GAAD,CAAMC,CAAN,CAAY,CACtC,GAAIA,CAAC,GAAKJ,KAAV,CAAiBG,GAAG,CAACnC,UAAJ,CAAiBiC,KAAjB,CACjB,MAAOE,CAAAA,GAAP,CACD,CAHY,CAAb,CAKA;AACAzC,QAAQ,CAAC,CAAEI,IAAI,CAAEA,IAAR,CAAD,CAAR,CACD,CAtDM,CAjBJ,CAAP,CA0ED,CA3ED,CA6EA,cAAeP,CAAAA,QAAf","sourcesContent":["const getState = ({ getStore, getActions, setStore }) => {\n  return {\n    store: {\n      token: null,\n      message: null,\n      demo: [\n        {\n          title: \"FIRST\",\n          background: \"white\",\n          initial: \"white\",\n        },\n        {\n          title: \"SECOND\",\n          background: \"white\",\n          initial: \"white\",\n        },\n      ],\n    },\n    actions: {\n      // Use getActions to call a function within a fuction\n      exampleFunction: () => {\n        getActions().changeColor(0, \"green\");\n      },\n\n      login: async (email, password) => {\n        const opts = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            email: email,\n            password: password,\n          }),\n        };\n        const resp = await fetch(\"http://127.0.0.1:3000/token\", opts);\n        try {\n          if (resp.status !== 200) {\n            alert(\"There has been some error!\");\n            return false;\n          }\n          const data = await resp.json();\n          console.log(\"this came from the backend\", data.access_token);\n          sessionStorage.setItem(\"token\", data.access_token);\n          setStore({ token: data.access_token });\n        } catch (error) {\n          console.error(\"There has been an error login in\");\n        }\n      },\n\n      getMessage: () => {\n        // fetching data from the backend\n        fetch(process.env.BACKEND_URL + \"/api/hello\")\n          .then((resp) => resp.json())\n          .then((data) => setStore({ message: data.message }))\n          .catch((error) =>\n            console.log(\"Error loading message from backend\", error)\n          );\n      },\n      changeColor: (index, color) => {\n        //get the store\n        const store = getStore();\n\n        //we have to loop the entire demo array to look for the respective index\n        //and change its color\n        const demo = store.demo.map((elm, i) => {\n          if (i === index) elm.background = color;\n          return elm;\n        });\n\n        //reset the global store\n        setStore({ demo: demo });\n      },\n    },\n  };\n};\n\nexport default getState;\n"]},"metadata":{},"sourceType":"module"}