{"ast":null,"code":"import _toConsumableArray from\"/home/Jilal99/sign_auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/Jilal99/sign_auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/Jilal99/sign_auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,Fragment}from\"react\";import{nanoid}from\"nanoid\";import\"./App.css\";import data from\"./mock-data.json\";import ReadOnlyRow from\"./ReadOnlyRow\";import EditableRow from\"./EditableRow\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Mealboard2=function Mealboard2(){var _useState=useState(data),_useState2=_slicedToArray(_useState,2),contacts=_useState2[0],setContacts=_useState2[1];var _useState3=useState({fullName:\"\",address:\"\",phoneNumber:\"\",email:\"\"}),_useState4=_slicedToArray(_useState3,2),addFormData=_useState4[0],setAddFormData=_useState4[1];var _useState5=useState({fullName:\"\",address:\"\",phoneNumber:\"\",email:\"\"}),_useState6=_slicedToArray(_useState5,2),editFormData=_useState6[0],setEditFormData=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),editContactId=_useState8[0],setEditContactId=_useState8[1];var handleAddFormChange=function handleAddFormChange(event){event.preventDefault();var fieldName=event.target.getAttribute(\"name\");var fieldValue=event.target.value;var newFormData=_objectSpread({},addFormData);newFormData[fieldName]=fieldValue;setAddFormData(newFormData);};var handleEditFormChange=function handleEditFormChange(event){event.preventDefault();var fieldName=event.target.getAttribute(\"name\");var fieldValue=event.target.value;var newFormData=_objectSpread({},editFormData);newFormData[fieldName]=fieldValue;setEditFormData(newFormData);};var handleAddFormSubmit=function handleAddFormSubmit(event){event.preventDefault();var newContact={id:nanoid(),fullName:addFormData.fullName,address:addFormData.address,phoneNumber:addFormData.phoneNumber,email:addFormData.email};var newContacts=[].concat(_toConsumableArray(contacts),[newContact]);setContacts(newContacts);};var handleEditFormSubmit=function handleEditFormSubmit(event){event.preventDefault();var editedContact={id:editContactId,fullName:editFormData.fullName,address:editFormData.address,phoneNumber:editFormData.phoneNumber,email:editFormData.email};var newContacts=_toConsumableArray(contacts);var index=contacts.findIndex(function(contact){return contact.id===editContactId;});newContacts[index]=editedContact;setContacts(newContacts);setEditContactId(null);};var handleEditClick=function handleEditClick(event,contact){event.preventDefault();setEditContactId(contact.id);var formValues={fullName:contact.fullName,address:contact.address,phoneNumber:contact.phoneNumber,email:contact.email};setEditFormData(formValues);};var handleCancelClick=function handleCancelClick(){setEditContactId(null);};var handleDeleteClick=function handleDeleteClick(contactId){var newContacts=_toConsumableArray(contacts);var index=contacts.findIndex(function(contact){return contact.id===contactId;});newContacts.splice(index,1);setContacts(newContacts);};return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsx(\"form\",{onSubmit:handleEditFormSubmit,children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Address\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Phone Number\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:contacts.map(function(contact){return/*#__PURE__*/_jsx(Fragment,{children:editContactId===contact.id?/*#__PURE__*/_jsx(EditableRow,{editFormData:editFormData,handleEditFormChange:handleEditFormChange,handleCancelClick:handleCancelClick}):/*#__PURE__*/_jsx(ReadOnlyRow,{contact:contact,handleEditClick:handleEditClick,handleDeleteClick:handleDeleteClick})});})})]})}),/*#__PURE__*/_jsx(\"h2\",{children:\"Add a Contact\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleAddFormSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"fullName\",required:\"required\",placeholder:\"Enter a name...\",onChange:handleAddFormChange}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"address\",required:\"required\",placeholder:\"Enter an addres...\",onChange:handleAddFormChange}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"phoneNumber\",required:\"required\",placeholder:\"Enter a phone number...\",onChange:handleAddFormChange}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",required:\"required\",placeholder:\"Enter an email...\",onChange:handleAddFormChange}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add\"})]})]});};export default Mealboard2;","map":{"version":3,"sources":["/home/Jilal99/sign_auth/src/Mealboard2.js"],"names":["React","useState","Fragment","nanoid","data","ReadOnlyRow","EditableRow","Mealboard2","contacts","setContacts","fullName","address","phoneNumber","email","addFormData","setAddFormData","editFormData","setEditFormData","editContactId","setEditContactId","handleAddFormChange","event","preventDefault","fieldName","target","getAttribute","fieldValue","value","newFormData","handleEditFormChange","handleAddFormSubmit","newContact","id","newContacts","handleEditFormSubmit","editedContact","index","findIndex","contact","handleEditClick","formValues","handleCancelClick","handleDeleteClick","contactId","splice","map"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./App.css\";\nimport data from \"./mock-data.json\";\nimport ReadOnlyRow from \"./ReadOnlyRow\";\nimport EditableRow from \"./EditableRow\";\n\nconst Mealboard2 = () => {\n  const [contacts, setContacts] = useState(data);\n  const [addFormData, setAddFormData] = useState({\n    fullName: \"\",\n    address: \"\",\n    phoneNumber: \"\",\n    email: \"\",\n  });\n\n  const [editFormData, setEditFormData] = useState({\n    fullName: \"\",\n    address: \"\",\n    phoneNumber: \"\",\n    email: \"\",\n  });\n\n  const [editContactId, setEditContactId] = useState(null);\n\n  const handleAddFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...addFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setAddFormData(newFormData);\n  };\n\n  const handleEditFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...editFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setEditFormData(newFormData);\n  };\n\n  const handleAddFormSubmit = (event) => {\n    event.preventDefault();\n\n    const newContact = {\n      id: nanoid(),\n      fullName: addFormData.fullName,\n      address: addFormData.address,\n      phoneNumber: addFormData.phoneNumber,\n      email: addFormData.email,\n    };\n\n    const newContacts = [...contacts, newContact];\n    setContacts(newContacts);\n  };\n\n  const handleEditFormSubmit = (event) => {\n    event.preventDefault();\n\n    const editedContact = {\n      id: editContactId,\n      fullName: editFormData.fullName,\n      address: editFormData.address,\n      phoneNumber: editFormData.phoneNumber,\n      email: editFormData.email,\n    };\n\n    const newContacts = [...contacts];\n\n    const index = contacts.findIndex((contact) => contact.id === editContactId);\n\n    newContacts[index] = editedContact;\n\n    setContacts(newContacts);\n    setEditContactId(null);\n  };\n\n  const handleEditClick = (event, contact) => {\n    event.preventDefault();\n    setEditContactId(contact.id);\n\n    const formValues = {\n      fullName: contact.fullName,\n      address: contact.address,\n      phoneNumber: contact.phoneNumber,\n      email: contact.email,\n    };\n\n    setEditFormData(formValues);\n  };\n\n  const handleCancelClick = () => {\n    setEditContactId(null);\n  };\n\n  const handleDeleteClick = (contactId) => {\n    const newContacts = [...contacts];\n\n    const index = contacts.findIndex((contact) => contact.id === contactId);\n\n    newContacts.splice(index, 1);\n\n    setContacts(newContacts);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <form onSubmit={handleEditFormSubmit}>\n        <table>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Address</th>\n              <th>Phone Number</th>\n              <th>Email</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {contacts.map((contact) => (\n              <Fragment>\n                {editContactId === contact.id ? (\n                  <EditableRow\n                    editFormData={editFormData}\n                    handleEditFormChange={handleEditFormChange}\n                    handleCancelClick={handleCancelClick}\n                  />\n                ) : (\n                  <ReadOnlyRow\n                    contact={contact}\n                    handleEditClick={handleEditClick}\n                    handleDeleteClick={handleDeleteClick}\n                  />\n                )}\n              </Fragment>\n            ))}\n          </tbody>\n        </table>\n      </form>\n\n      <h2>Add a Contact</h2>\n      <form onSubmit={handleAddFormSubmit}>\n        <input\n          type=\"text\"\n          name=\"fullName\"\n          required=\"required\"\n          placeholder=\"Enter a name...\"\n          onChange={handleAddFormChange}\n        />\n        <input\n          type=\"text\"\n          name=\"address\"\n          required=\"required\"\n          placeholder=\"Enter an addres...\"\n          onChange={handleAddFormChange}\n        />\n        <input\n          type=\"text\"\n          name=\"phoneNumber\"\n          required=\"required\"\n          placeholder=\"Enter a phone number...\"\n          onChange={handleAddFormChange}\n        />\n        <input\n          type=\"email\"\n          name=\"email\"\n          required=\"required\"\n          placeholder=\"Enter an email...\"\n          onChange={handleAddFormChange}\n        />\n        <button type=\"submit\">Add</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Mealboard2;"]},"metadata":{},"sourceType":"module"}