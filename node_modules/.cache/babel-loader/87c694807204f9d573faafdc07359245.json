{"ast":null,"code":"var _jsxFileName = \"/home/Jilal99/meal_app/src/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport UserProfile from './UserProfile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = process.env.REACT_APP_CLIENTID;\n\nfunction Login() {\n  _s();\n\n  const [username, setusername] = useState(\"\");\n  const [useremail, setuseremail] = useState(\"\");\n  const [userimage, setuserimage] = useState(\"\");\n  const [showloginButton, setShowloginButton] = useState(true);\n  const [showlogoutButton, setShowlogoutButton] = useState(false);\n\n  const onLoginSuccess = res => {\n    console.log('Login Success:', res.profileObj);\n    setShowloginButton(false);\n    setShowlogoutButton(true);\n    setusername(res.profileObj.name);\n    setuseremail(res.profileObj.email);\n    setuserimage(res.profileObj.imageUrl);\n    UserProfile.setEmail(res.profileObj.email);\n    UserProfile.setName(res.profileObj.name);\n    fetchEmail(res.profileObj.email);\n  };\n\n  const onLoginFailure = res => {\n    console.log('Login Failed:', res);\n  };\n\n  const onSignoutSuccess = () => {\n    alert(\"You have been logged out successfully\");\n    console.clear();\n    setShowloginButton(true);\n    setShowlogoutButton(false);\n  };\n\n  function fetchEmail(email) {\n    fetch(\"/\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'email': email\n      })\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: userimage,\n        atl: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: useremail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), showloginButton ? /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: clientId,\n      buttonText: \"Sign In\",\n      onSuccess: onLoginSuccess,\n      onFailure: onLoginFailure,\n      cookiePolicy: 'single_host_origin',\n      isSignedIn: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this) : null, showlogoutButton ? /*#__PURE__*/_jsxDEV(GoogleLogout, {\n      clientId: clientId,\n      buttonText: \"Sign Out\",\n      onLogoutSuccess: onSignoutSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"cVAQx19byDed+MWWHpxJLojS0Dk=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/Jilal99/meal_app/src/Login.js"],"names":["React","useState","GoogleLogin","GoogleLogout","UserProfile","clientId","process","env","REACT_APP_CLIENTID","Login","username","setusername","useremail","setuseremail","userimage","setuserimage","showloginButton","setShowloginButton","showlogoutButton","setShowlogoutButton","onLoginSuccess","res","console","log","profileObj","name","email","imageUrl","setEmail","setName","fetchEmail","onLoginFailure","onSignoutSuccess","alert","clear","fetch","method","headers","body","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport UserProfile from './UserProfile';\nconst clientId = process.env.REACT_APP_CLIENTID;\n\nfunction Login() {\n   \n\n    const [username, setusername] = useState(\"\");\n    const [useremail, setuseremail] = useState(\"\");\n    const [userimage, setuserimage] = useState(\"\");\n\n    const [showloginButton, setShowloginButton] = useState(true);\n    const [showlogoutButton, setShowlogoutButton] = useState(false);\n    const onLoginSuccess = (res) => {\n        console.log('Login Success:', res.profileObj);\n        setShowloginButton(false);\n        setShowlogoutButton(true);\n        setusername(res.profileObj.name);\n        setuseremail(res.profileObj.email);\n        setuserimage(res.profileObj.imageUrl);\n        UserProfile.setEmail(res.profileObj.email);\n        UserProfile.setName(res.profileObj.name);\n        fetchEmail(res.profileObj.email);\n        \n    };\n\n    const onLoginFailure = (res) => {\n        console.log('Login Failed:', res);\n    };\n\n    const onSignoutSuccess = () => {\n        alert(\"You have been logged out successfully\");\n        console.clear();\n        setShowloginButton(true);\n        setShowlogoutButton(false);\n    };\n\n    function fetchEmail(email){\n\n        fetch(\"/\", {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify( {'email': email}),\n          });\n   \n    }\n\n    return (\n        <div>\n            <div className=\"user-info\">\n                <img src={userimage} atl=\"\"/>\n                <p>{username}</p>\n                <p>{useremail}</p>\n            </div>\n            { showloginButton ?\n                <GoogleLogin\n                    clientId={clientId}\n                    buttonText=\"Sign In\"\n                    onSuccess={onLoginSuccess}\n                    onFailure={onLoginFailure}\n                    cookiePolicy={'single_host_origin'}\n                    isSignedIn={true}\n                /> : null}\n\n            { showlogoutButton ?\n                <GoogleLogout\n                    clientId={clientId}\n                    buttonText=\"Sign Out\"\n                    onLogoutSuccess={onSignoutSuccess}\n                >\n                </GoogleLogout> : null\n            }\n        </div>\n    );\n}\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}